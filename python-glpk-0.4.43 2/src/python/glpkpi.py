# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.7
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_glpkpi', [dirname(__file__)])
        except ImportError:
            import _glpkpi
            return _glpkpi
        if fp is not None:
            try:
                _mod = imp.load_module('_glpkpi', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _glpkpi = swig_import_helper()
    del swig_import_helper
else:
    import _glpkpi
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0


class intArray(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, intArray, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, intArray, name)
    __repr__ = _swig_repr

    def __init__(self, nelements):
        this = _glpkpi.new_intArray(nelements)
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _glpkpi.delete_intArray
    __del__ = lambda self: None

    def __getitem__(self, index):
        return _glpkpi.intArray___getitem__(self, index)

    def __setitem__(self, index, value):
        return _glpkpi.intArray___setitem__(self, index, value)

    def cast(self):
        return _glpkpi.intArray_cast(self)
    __swig_getmethods__["frompointer"] = lambda x: _glpkpi.intArray_frompointer
    if _newclass:
        frompointer = staticmethod(_glpkpi.intArray_frompointer)
intArray_swigregister = _glpkpi.intArray_swigregister
intArray_swigregister(intArray)

def intArray_frompointer(t):
    return _glpkpi.intArray_frompointer(t)
intArray_frompointer = _glpkpi.intArray_frompointer

class doubleArray(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, doubleArray, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, doubleArray, name)
    __repr__ = _swig_repr

    def __init__(self, nelements):
        this = _glpkpi.new_doubleArray(nelements)
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _glpkpi.delete_doubleArray
    __del__ = lambda self: None

    def __getitem__(self, index):
        return _glpkpi.doubleArray___getitem__(self, index)

    def __setitem__(self, index, value):
        return _glpkpi.doubleArray___setitem__(self, index, value)

    def cast(self):
        return _glpkpi.doubleArray_cast(self)
    __swig_getmethods__["frompointer"] = lambda x: _glpkpi.doubleArray_frompointer
    if _newclass:
        frompointer = staticmethod(_glpkpi.doubleArray_frompointer)
doubleArray_swigregister = _glpkpi.doubleArray_swigregister
doubleArray_swigregister(doubleArray)

def doubleArray_frompointer(t):
    return _glpkpi.doubleArray_frompointer(t)
doubleArray_frompointer = _glpkpi.doubleArray_frompointer


_glpkpi.GLP_MAJOR_VERSION_swigconstant(_glpkpi)
GLP_MAJOR_VERSION = _glpkpi.GLP_MAJOR_VERSION

_glpkpi.GLP_MINOR_VERSION_swigconstant(_glpkpi)
GLP_MINOR_VERSION = _glpkpi.GLP_MINOR_VERSION
class glp_prob(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, glp_prob, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, glp_prob, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_opaque_prob"] = _glpkpi.glp_prob__opaque_prob_set
    __swig_getmethods__["_opaque_prob"] = _glpkpi.glp_prob__opaque_prob_get
    if _newclass:
        _opaque_prob = _swig_property(_glpkpi.glp_prob__opaque_prob_get, _glpkpi.glp_prob__opaque_prob_set)

    def __init__(self):
        this = _glpkpi.new_glp_prob()
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _glpkpi.delete_glp_prob
    __del__ = lambda self: None
glp_prob_swigregister = _glpkpi.glp_prob_swigregister
glp_prob_swigregister(glp_prob)


_glpkpi.GLP_MIN_swigconstant(_glpkpi)
GLP_MIN = _glpkpi.GLP_MIN

_glpkpi.GLP_MAX_swigconstant(_glpkpi)
GLP_MAX = _glpkpi.GLP_MAX

_glpkpi.GLP_CV_swigconstant(_glpkpi)
GLP_CV = _glpkpi.GLP_CV

_glpkpi.GLP_IV_swigconstant(_glpkpi)
GLP_IV = _glpkpi.GLP_IV

_glpkpi.GLP_BV_swigconstant(_glpkpi)
GLP_BV = _glpkpi.GLP_BV

_glpkpi.GLP_FR_swigconstant(_glpkpi)
GLP_FR = _glpkpi.GLP_FR

_glpkpi.GLP_LO_swigconstant(_glpkpi)
GLP_LO = _glpkpi.GLP_LO

_glpkpi.GLP_UP_swigconstant(_glpkpi)
GLP_UP = _glpkpi.GLP_UP

_glpkpi.GLP_DB_swigconstant(_glpkpi)
GLP_DB = _glpkpi.GLP_DB

_glpkpi.GLP_FX_swigconstant(_glpkpi)
GLP_FX = _glpkpi.GLP_FX

_glpkpi.GLP_BS_swigconstant(_glpkpi)
GLP_BS = _glpkpi.GLP_BS

_glpkpi.GLP_NL_swigconstant(_glpkpi)
GLP_NL = _glpkpi.GLP_NL

_glpkpi.GLP_NU_swigconstant(_glpkpi)
GLP_NU = _glpkpi.GLP_NU

_glpkpi.GLP_NF_swigconstant(_glpkpi)
GLP_NF = _glpkpi.GLP_NF

_glpkpi.GLP_NS_swigconstant(_glpkpi)
GLP_NS = _glpkpi.GLP_NS

_glpkpi.GLP_SF_GM_swigconstant(_glpkpi)
GLP_SF_GM = _glpkpi.GLP_SF_GM

_glpkpi.GLP_SF_EQ_swigconstant(_glpkpi)
GLP_SF_EQ = _glpkpi.GLP_SF_EQ

_glpkpi.GLP_SF_2N_swigconstant(_glpkpi)
GLP_SF_2N = _glpkpi.GLP_SF_2N

_glpkpi.GLP_SF_SKIP_swigconstant(_glpkpi)
GLP_SF_SKIP = _glpkpi.GLP_SF_SKIP

_glpkpi.GLP_SF_AUTO_swigconstant(_glpkpi)
GLP_SF_AUTO = _glpkpi.GLP_SF_AUTO

_glpkpi.GLP_SOL_swigconstant(_glpkpi)
GLP_SOL = _glpkpi.GLP_SOL

_glpkpi.GLP_IPT_swigconstant(_glpkpi)
GLP_IPT = _glpkpi.GLP_IPT

_glpkpi.GLP_MIP_swigconstant(_glpkpi)
GLP_MIP = _glpkpi.GLP_MIP

_glpkpi.GLP_UNDEF_swigconstant(_glpkpi)
GLP_UNDEF = _glpkpi.GLP_UNDEF

_glpkpi.GLP_FEAS_swigconstant(_glpkpi)
GLP_FEAS = _glpkpi.GLP_FEAS

_glpkpi.GLP_INFEAS_swigconstant(_glpkpi)
GLP_INFEAS = _glpkpi.GLP_INFEAS

_glpkpi.GLP_NOFEAS_swigconstant(_glpkpi)
GLP_NOFEAS = _glpkpi.GLP_NOFEAS

_glpkpi.GLP_OPT_swigconstant(_glpkpi)
GLP_OPT = _glpkpi.GLP_OPT

_glpkpi.GLP_UNBND_swigconstant(_glpkpi)
GLP_UNBND = _glpkpi.GLP_UNBND
class glp_bfcp(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, glp_bfcp, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, glp_bfcp, name)
    __repr__ = _swig_repr
    __swig_setmethods__["msg_lev"] = _glpkpi.glp_bfcp_msg_lev_set
    __swig_getmethods__["msg_lev"] = _glpkpi.glp_bfcp_msg_lev_get
    if _newclass:
        msg_lev = _swig_property(_glpkpi.glp_bfcp_msg_lev_get, _glpkpi.glp_bfcp_msg_lev_set)
    __swig_setmethods__["type"] = _glpkpi.glp_bfcp_type_set
    __swig_getmethods__["type"] = _glpkpi.glp_bfcp_type_get
    if _newclass:
        type = _swig_property(_glpkpi.glp_bfcp_type_get, _glpkpi.glp_bfcp_type_set)
    __swig_setmethods__["lu_size"] = _glpkpi.glp_bfcp_lu_size_set
    __swig_getmethods__["lu_size"] = _glpkpi.glp_bfcp_lu_size_get
    if _newclass:
        lu_size = _swig_property(_glpkpi.glp_bfcp_lu_size_get, _glpkpi.glp_bfcp_lu_size_set)
    __swig_setmethods__["piv_tol"] = _glpkpi.glp_bfcp_piv_tol_set
    __swig_getmethods__["piv_tol"] = _glpkpi.glp_bfcp_piv_tol_get
    if _newclass:
        piv_tol = _swig_property(_glpkpi.glp_bfcp_piv_tol_get, _glpkpi.glp_bfcp_piv_tol_set)
    __swig_setmethods__["piv_lim"] = _glpkpi.glp_bfcp_piv_lim_set
    __swig_getmethods__["piv_lim"] = _glpkpi.glp_bfcp_piv_lim_get
    if _newclass:
        piv_lim = _swig_property(_glpkpi.glp_bfcp_piv_lim_get, _glpkpi.glp_bfcp_piv_lim_set)
    __swig_setmethods__["suhl"] = _glpkpi.glp_bfcp_suhl_set
    __swig_getmethods__["suhl"] = _glpkpi.glp_bfcp_suhl_get
    if _newclass:
        suhl = _swig_property(_glpkpi.glp_bfcp_suhl_get, _glpkpi.glp_bfcp_suhl_set)
    __swig_setmethods__["eps_tol"] = _glpkpi.glp_bfcp_eps_tol_set
    __swig_getmethods__["eps_tol"] = _glpkpi.glp_bfcp_eps_tol_get
    if _newclass:
        eps_tol = _swig_property(_glpkpi.glp_bfcp_eps_tol_get, _glpkpi.glp_bfcp_eps_tol_set)
    __swig_setmethods__["max_gro"] = _glpkpi.glp_bfcp_max_gro_set
    __swig_getmethods__["max_gro"] = _glpkpi.glp_bfcp_max_gro_get
    if _newclass:
        max_gro = _swig_property(_glpkpi.glp_bfcp_max_gro_get, _glpkpi.glp_bfcp_max_gro_set)
    __swig_setmethods__["nfs_max"] = _glpkpi.glp_bfcp_nfs_max_set
    __swig_getmethods__["nfs_max"] = _glpkpi.glp_bfcp_nfs_max_get
    if _newclass:
        nfs_max = _swig_property(_glpkpi.glp_bfcp_nfs_max_get, _glpkpi.glp_bfcp_nfs_max_set)
    __swig_setmethods__["upd_tol"] = _glpkpi.glp_bfcp_upd_tol_set
    __swig_getmethods__["upd_tol"] = _glpkpi.glp_bfcp_upd_tol_get
    if _newclass:
        upd_tol = _swig_property(_glpkpi.glp_bfcp_upd_tol_get, _glpkpi.glp_bfcp_upd_tol_set)
    __swig_setmethods__["nrs_max"] = _glpkpi.glp_bfcp_nrs_max_set
    __swig_getmethods__["nrs_max"] = _glpkpi.glp_bfcp_nrs_max_get
    if _newclass:
        nrs_max = _swig_property(_glpkpi.glp_bfcp_nrs_max_get, _glpkpi.glp_bfcp_nrs_max_set)
    __swig_setmethods__["rs_size"] = _glpkpi.glp_bfcp_rs_size_set
    __swig_getmethods__["rs_size"] = _glpkpi.glp_bfcp_rs_size_get
    if _newclass:
        rs_size = _swig_property(_glpkpi.glp_bfcp_rs_size_get, _glpkpi.glp_bfcp_rs_size_set)
    __swig_setmethods__["foo_bar"] = _glpkpi.glp_bfcp_foo_bar_set
    __swig_getmethods__["foo_bar"] = _glpkpi.glp_bfcp_foo_bar_get
    if _newclass:
        foo_bar = _swig_property(_glpkpi.glp_bfcp_foo_bar_get, _glpkpi.glp_bfcp_foo_bar_set)

    def __init__(self):
        this = _glpkpi.new_glp_bfcp()
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _glpkpi.delete_glp_bfcp
    __del__ = lambda self: None
glp_bfcp_swigregister = _glpkpi.glp_bfcp_swigregister
glp_bfcp_swigregister(glp_bfcp)

_glpkpi.GLP_BF_FT_swigconstant(_glpkpi)
GLP_BF_FT = _glpkpi.GLP_BF_FT

_glpkpi.GLP_BF_BG_swigconstant(_glpkpi)
GLP_BF_BG = _glpkpi.GLP_BF_BG

_glpkpi.GLP_BF_GR_swigconstant(_glpkpi)
GLP_BF_GR = _glpkpi.GLP_BF_GR

class glp_smcp(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, glp_smcp, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, glp_smcp, name)
    __repr__ = _swig_repr
    __swig_setmethods__["msg_lev"] = _glpkpi.glp_smcp_msg_lev_set
    __swig_getmethods__["msg_lev"] = _glpkpi.glp_smcp_msg_lev_get
    if _newclass:
        msg_lev = _swig_property(_glpkpi.glp_smcp_msg_lev_get, _glpkpi.glp_smcp_msg_lev_set)
    __swig_setmethods__["meth"] = _glpkpi.glp_smcp_meth_set
    __swig_getmethods__["meth"] = _glpkpi.glp_smcp_meth_get
    if _newclass:
        meth = _swig_property(_glpkpi.glp_smcp_meth_get, _glpkpi.glp_smcp_meth_set)
    __swig_setmethods__["pricing"] = _glpkpi.glp_smcp_pricing_set
    __swig_getmethods__["pricing"] = _glpkpi.glp_smcp_pricing_get
    if _newclass:
        pricing = _swig_property(_glpkpi.glp_smcp_pricing_get, _glpkpi.glp_smcp_pricing_set)
    __swig_setmethods__["r_test"] = _glpkpi.glp_smcp_r_test_set
    __swig_getmethods__["r_test"] = _glpkpi.glp_smcp_r_test_get
    if _newclass:
        r_test = _swig_property(_glpkpi.glp_smcp_r_test_get, _glpkpi.glp_smcp_r_test_set)
    __swig_setmethods__["tol_bnd"] = _glpkpi.glp_smcp_tol_bnd_set
    __swig_getmethods__["tol_bnd"] = _glpkpi.glp_smcp_tol_bnd_get
    if _newclass:
        tol_bnd = _swig_property(_glpkpi.glp_smcp_tol_bnd_get, _glpkpi.glp_smcp_tol_bnd_set)
    __swig_setmethods__["tol_dj"] = _glpkpi.glp_smcp_tol_dj_set
    __swig_getmethods__["tol_dj"] = _glpkpi.glp_smcp_tol_dj_get
    if _newclass:
        tol_dj = _swig_property(_glpkpi.glp_smcp_tol_dj_get, _glpkpi.glp_smcp_tol_dj_set)
    __swig_setmethods__["tol_piv"] = _glpkpi.glp_smcp_tol_piv_set
    __swig_getmethods__["tol_piv"] = _glpkpi.glp_smcp_tol_piv_get
    if _newclass:
        tol_piv = _swig_property(_glpkpi.glp_smcp_tol_piv_get, _glpkpi.glp_smcp_tol_piv_set)
    __swig_setmethods__["obj_ll"] = _glpkpi.glp_smcp_obj_ll_set
    __swig_getmethods__["obj_ll"] = _glpkpi.glp_smcp_obj_ll_get
    if _newclass:
        obj_ll = _swig_property(_glpkpi.glp_smcp_obj_ll_get, _glpkpi.glp_smcp_obj_ll_set)
    __swig_setmethods__["obj_ul"] = _glpkpi.glp_smcp_obj_ul_set
    __swig_getmethods__["obj_ul"] = _glpkpi.glp_smcp_obj_ul_get
    if _newclass:
        obj_ul = _swig_property(_glpkpi.glp_smcp_obj_ul_get, _glpkpi.glp_smcp_obj_ul_set)
    __swig_setmethods__["it_lim"] = _glpkpi.glp_smcp_it_lim_set
    __swig_getmethods__["it_lim"] = _glpkpi.glp_smcp_it_lim_get
    if _newclass:
        it_lim = _swig_property(_glpkpi.glp_smcp_it_lim_get, _glpkpi.glp_smcp_it_lim_set)
    __swig_setmethods__["tm_lim"] = _glpkpi.glp_smcp_tm_lim_set
    __swig_getmethods__["tm_lim"] = _glpkpi.glp_smcp_tm_lim_get
    if _newclass:
        tm_lim = _swig_property(_glpkpi.glp_smcp_tm_lim_get, _glpkpi.glp_smcp_tm_lim_set)
    __swig_setmethods__["out_frq"] = _glpkpi.glp_smcp_out_frq_set
    __swig_getmethods__["out_frq"] = _glpkpi.glp_smcp_out_frq_get
    if _newclass:
        out_frq = _swig_property(_glpkpi.glp_smcp_out_frq_get, _glpkpi.glp_smcp_out_frq_set)
    __swig_setmethods__["out_dly"] = _glpkpi.glp_smcp_out_dly_set
    __swig_getmethods__["out_dly"] = _glpkpi.glp_smcp_out_dly_get
    if _newclass:
        out_dly = _swig_property(_glpkpi.glp_smcp_out_dly_get, _glpkpi.glp_smcp_out_dly_set)
    __swig_setmethods__["presolve"] = _glpkpi.glp_smcp_presolve_set
    __swig_getmethods__["presolve"] = _glpkpi.glp_smcp_presolve_get
    if _newclass:
        presolve = _swig_property(_glpkpi.glp_smcp_presolve_get, _glpkpi.glp_smcp_presolve_set)
    __swig_setmethods__["foo_bar"] = _glpkpi.glp_smcp_foo_bar_set
    __swig_getmethods__["foo_bar"] = _glpkpi.glp_smcp_foo_bar_get
    if _newclass:
        foo_bar = _swig_property(_glpkpi.glp_smcp_foo_bar_get, _glpkpi.glp_smcp_foo_bar_set)

    def __init__(self):
        this = _glpkpi.new_glp_smcp()
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _glpkpi.delete_glp_smcp
    __del__ = lambda self: None
glp_smcp_swigregister = _glpkpi.glp_smcp_swigregister
glp_smcp_swigregister(glp_smcp)

_glpkpi.GLP_MSG_OFF_swigconstant(_glpkpi)
GLP_MSG_OFF = _glpkpi.GLP_MSG_OFF

_glpkpi.GLP_MSG_ERR_swigconstant(_glpkpi)
GLP_MSG_ERR = _glpkpi.GLP_MSG_ERR

_glpkpi.GLP_MSG_ON_swigconstant(_glpkpi)
GLP_MSG_ON = _glpkpi.GLP_MSG_ON

_glpkpi.GLP_MSG_ALL_swigconstant(_glpkpi)
GLP_MSG_ALL = _glpkpi.GLP_MSG_ALL

_glpkpi.GLP_MSG_DBG_swigconstant(_glpkpi)
GLP_MSG_DBG = _glpkpi.GLP_MSG_DBG

_glpkpi.GLP_PRIMAL_swigconstant(_glpkpi)
GLP_PRIMAL = _glpkpi.GLP_PRIMAL

_glpkpi.GLP_DUALP_swigconstant(_glpkpi)
GLP_DUALP = _glpkpi.GLP_DUALP

_glpkpi.GLP_DUAL_swigconstant(_glpkpi)
GLP_DUAL = _glpkpi.GLP_DUAL

_glpkpi.GLP_PT_STD_swigconstant(_glpkpi)
GLP_PT_STD = _glpkpi.GLP_PT_STD

_glpkpi.GLP_PT_PSE_swigconstant(_glpkpi)
GLP_PT_PSE = _glpkpi.GLP_PT_PSE

_glpkpi.GLP_RT_STD_swigconstant(_glpkpi)
GLP_RT_STD = _glpkpi.GLP_RT_STD

_glpkpi.GLP_RT_HAR_swigconstant(_glpkpi)
GLP_RT_HAR = _glpkpi.GLP_RT_HAR

class glp_iptcp(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, glp_iptcp, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, glp_iptcp, name)
    __repr__ = _swig_repr
    __swig_setmethods__["msg_lev"] = _glpkpi.glp_iptcp_msg_lev_set
    __swig_getmethods__["msg_lev"] = _glpkpi.glp_iptcp_msg_lev_get
    if _newclass:
        msg_lev = _swig_property(_glpkpi.glp_iptcp_msg_lev_get, _glpkpi.glp_iptcp_msg_lev_set)
    __swig_setmethods__["ord_alg"] = _glpkpi.glp_iptcp_ord_alg_set
    __swig_getmethods__["ord_alg"] = _glpkpi.glp_iptcp_ord_alg_get
    if _newclass:
        ord_alg = _swig_property(_glpkpi.glp_iptcp_ord_alg_get, _glpkpi.glp_iptcp_ord_alg_set)
    __swig_setmethods__["foo_bar"] = _glpkpi.glp_iptcp_foo_bar_set
    __swig_getmethods__["foo_bar"] = _glpkpi.glp_iptcp_foo_bar_get
    if _newclass:
        foo_bar = _swig_property(_glpkpi.glp_iptcp_foo_bar_get, _glpkpi.glp_iptcp_foo_bar_set)

    def __init__(self):
        this = _glpkpi.new_glp_iptcp()
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _glpkpi.delete_glp_iptcp
    __del__ = lambda self: None
glp_iptcp_swigregister = _glpkpi.glp_iptcp_swigregister
glp_iptcp_swigregister(glp_iptcp)

_glpkpi.GLP_ORD_NONE_swigconstant(_glpkpi)
GLP_ORD_NONE = _glpkpi.GLP_ORD_NONE

_glpkpi.GLP_ORD_QMD_swigconstant(_glpkpi)
GLP_ORD_QMD = _glpkpi.GLP_ORD_QMD

_glpkpi.GLP_ORD_AMD_swigconstant(_glpkpi)
GLP_ORD_AMD = _glpkpi.GLP_ORD_AMD

_glpkpi.GLP_ORD_SYMAMD_swigconstant(_glpkpi)
GLP_ORD_SYMAMD = _glpkpi.GLP_ORD_SYMAMD

class glp_tree(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, glp_tree, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, glp_tree, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_opaque_tree"] = _glpkpi.glp_tree__opaque_tree_set
    __swig_getmethods__["_opaque_tree"] = _glpkpi.glp_tree__opaque_tree_get
    if _newclass:
        _opaque_tree = _swig_property(_glpkpi.glp_tree__opaque_tree_get, _glpkpi.glp_tree__opaque_tree_set)

    def __init__(self):
        this = _glpkpi.new_glp_tree()
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _glpkpi.delete_glp_tree
    __del__ = lambda self: None
glp_tree_swigregister = _glpkpi.glp_tree_swigregister
glp_tree_swigregister(glp_tree)

class glp_iocp(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, glp_iocp, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, glp_iocp, name)
    __repr__ = _swig_repr
    __swig_setmethods__["msg_lev"] = _glpkpi.glp_iocp_msg_lev_set
    __swig_getmethods__["msg_lev"] = _glpkpi.glp_iocp_msg_lev_get
    if _newclass:
        msg_lev = _swig_property(_glpkpi.glp_iocp_msg_lev_get, _glpkpi.glp_iocp_msg_lev_set)
    __swig_setmethods__["br_tech"] = _glpkpi.glp_iocp_br_tech_set
    __swig_getmethods__["br_tech"] = _glpkpi.glp_iocp_br_tech_get
    if _newclass:
        br_tech = _swig_property(_glpkpi.glp_iocp_br_tech_get, _glpkpi.glp_iocp_br_tech_set)
    __swig_setmethods__["bt_tech"] = _glpkpi.glp_iocp_bt_tech_set
    __swig_getmethods__["bt_tech"] = _glpkpi.glp_iocp_bt_tech_get
    if _newclass:
        bt_tech = _swig_property(_glpkpi.glp_iocp_bt_tech_get, _glpkpi.glp_iocp_bt_tech_set)
    __swig_setmethods__["tol_int"] = _glpkpi.glp_iocp_tol_int_set
    __swig_getmethods__["tol_int"] = _glpkpi.glp_iocp_tol_int_get
    if _newclass:
        tol_int = _swig_property(_glpkpi.glp_iocp_tol_int_get, _glpkpi.glp_iocp_tol_int_set)
    __swig_setmethods__["tol_obj"] = _glpkpi.glp_iocp_tol_obj_set
    __swig_getmethods__["tol_obj"] = _glpkpi.glp_iocp_tol_obj_get
    if _newclass:
        tol_obj = _swig_property(_glpkpi.glp_iocp_tol_obj_get, _glpkpi.glp_iocp_tol_obj_set)
    __swig_setmethods__["tm_lim"] = _glpkpi.glp_iocp_tm_lim_set
    __swig_getmethods__["tm_lim"] = _glpkpi.glp_iocp_tm_lim_get
    if _newclass:
        tm_lim = _swig_property(_glpkpi.glp_iocp_tm_lim_get, _glpkpi.glp_iocp_tm_lim_set)
    __swig_setmethods__["out_frq"] = _glpkpi.glp_iocp_out_frq_set
    __swig_getmethods__["out_frq"] = _glpkpi.glp_iocp_out_frq_get
    if _newclass:
        out_frq = _swig_property(_glpkpi.glp_iocp_out_frq_get, _glpkpi.glp_iocp_out_frq_set)
    __swig_setmethods__["out_dly"] = _glpkpi.glp_iocp_out_dly_set
    __swig_getmethods__["out_dly"] = _glpkpi.glp_iocp_out_dly_get
    if _newclass:
        out_dly = _swig_property(_glpkpi.glp_iocp_out_dly_get, _glpkpi.glp_iocp_out_dly_set)
    __swig_setmethods__["cb_func"] = _glpkpi.glp_iocp_cb_func_set
    __swig_getmethods__["cb_func"] = _glpkpi.glp_iocp_cb_func_get
    if _newclass:
        cb_func = _swig_property(_glpkpi.glp_iocp_cb_func_get, _glpkpi.glp_iocp_cb_func_set)
    __swig_setmethods__["cb_info"] = _glpkpi.glp_iocp_cb_info_set
    __swig_getmethods__["cb_info"] = _glpkpi.glp_iocp_cb_info_get
    if _newclass:
        cb_info = _swig_property(_glpkpi.glp_iocp_cb_info_get, _glpkpi.glp_iocp_cb_info_set)
    __swig_setmethods__["cb_size"] = _glpkpi.glp_iocp_cb_size_set
    __swig_getmethods__["cb_size"] = _glpkpi.glp_iocp_cb_size_get
    if _newclass:
        cb_size = _swig_property(_glpkpi.glp_iocp_cb_size_get, _glpkpi.glp_iocp_cb_size_set)
    __swig_setmethods__["pp_tech"] = _glpkpi.glp_iocp_pp_tech_set
    __swig_getmethods__["pp_tech"] = _glpkpi.glp_iocp_pp_tech_get
    if _newclass:
        pp_tech = _swig_property(_glpkpi.glp_iocp_pp_tech_get, _glpkpi.glp_iocp_pp_tech_set)
    __swig_setmethods__["mip_gap"] = _glpkpi.glp_iocp_mip_gap_set
    __swig_getmethods__["mip_gap"] = _glpkpi.glp_iocp_mip_gap_get
    if _newclass:
        mip_gap = _swig_property(_glpkpi.glp_iocp_mip_gap_get, _glpkpi.glp_iocp_mip_gap_set)
    __swig_setmethods__["mir_cuts"] = _glpkpi.glp_iocp_mir_cuts_set
    __swig_getmethods__["mir_cuts"] = _glpkpi.glp_iocp_mir_cuts_get
    if _newclass:
        mir_cuts = _swig_property(_glpkpi.glp_iocp_mir_cuts_get, _glpkpi.glp_iocp_mir_cuts_set)
    __swig_setmethods__["gmi_cuts"] = _glpkpi.glp_iocp_gmi_cuts_set
    __swig_getmethods__["gmi_cuts"] = _glpkpi.glp_iocp_gmi_cuts_get
    if _newclass:
        gmi_cuts = _swig_property(_glpkpi.glp_iocp_gmi_cuts_get, _glpkpi.glp_iocp_gmi_cuts_set)
    __swig_setmethods__["cov_cuts"] = _glpkpi.glp_iocp_cov_cuts_set
    __swig_getmethods__["cov_cuts"] = _glpkpi.glp_iocp_cov_cuts_get
    if _newclass:
        cov_cuts = _swig_property(_glpkpi.glp_iocp_cov_cuts_get, _glpkpi.glp_iocp_cov_cuts_set)
    __swig_setmethods__["clq_cuts"] = _glpkpi.glp_iocp_clq_cuts_set
    __swig_getmethods__["clq_cuts"] = _glpkpi.glp_iocp_clq_cuts_get
    if _newclass:
        clq_cuts = _swig_property(_glpkpi.glp_iocp_clq_cuts_get, _glpkpi.glp_iocp_clq_cuts_set)
    __swig_setmethods__["presolve"] = _glpkpi.glp_iocp_presolve_set
    __swig_getmethods__["presolve"] = _glpkpi.glp_iocp_presolve_get
    if _newclass:
        presolve = _swig_property(_glpkpi.glp_iocp_presolve_get, _glpkpi.glp_iocp_presolve_set)
    __swig_setmethods__["binarize"] = _glpkpi.glp_iocp_binarize_set
    __swig_getmethods__["binarize"] = _glpkpi.glp_iocp_binarize_get
    if _newclass:
        binarize = _swig_property(_glpkpi.glp_iocp_binarize_get, _glpkpi.glp_iocp_binarize_set)
    __swig_setmethods__["fp_heur"] = _glpkpi.glp_iocp_fp_heur_set
    __swig_getmethods__["fp_heur"] = _glpkpi.glp_iocp_fp_heur_get
    if _newclass:
        fp_heur = _swig_property(_glpkpi.glp_iocp_fp_heur_get, _glpkpi.glp_iocp_fp_heur_set)
    __swig_setmethods__["foo_bar"] = _glpkpi.glp_iocp_foo_bar_set
    __swig_getmethods__["foo_bar"] = _glpkpi.glp_iocp_foo_bar_get
    if _newclass:
        foo_bar = _swig_property(_glpkpi.glp_iocp_foo_bar_get, _glpkpi.glp_iocp_foo_bar_set)

    def __init__(self):
        this = _glpkpi.new_glp_iocp()
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _glpkpi.delete_glp_iocp
    __del__ = lambda self: None
glp_iocp_swigregister = _glpkpi.glp_iocp_swigregister
glp_iocp_swigregister(glp_iocp)

_glpkpi.GLP_BR_FFV_swigconstant(_glpkpi)
GLP_BR_FFV = _glpkpi.GLP_BR_FFV

_glpkpi.GLP_BR_LFV_swigconstant(_glpkpi)
GLP_BR_LFV = _glpkpi.GLP_BR_LFV

_glpkpi.GLP_BR_MFV_swigconstant(_glpkpi)
GLP_BR_MFV = _glpkpi.GLP_BR_MFV

_glpkpi.GLP_BR_DTH_swigconstant(_glpkpi)
GLP_BR_DTH = _glpkpi.GLP_BR_DTH

_glpkpi.GLP_BR_PCH_swigconstant(_glpkpi)
GLP_BR_PCH = _glpkpi.GLP_BR_PCH

_glpkpi.GLP_BT_DFS_swigconstant(_glpkpi)
GLP_BT_DFS = _glpkpi.GLP_BT_DFS

_glpkpi.GLP_BT_BFS_swigconstant(_glpkpi)
GLP_BT_BFS = _glpkpi.GLP_BT_BFS

_glpkpi.GLP_BT_BLB_swigconstant(_glpkpi)
GLP_BT_BLB = _glpkpi.GLP_BT_BLB

_glpkpi.GLP_BT_BPH_swigconstant(_glpkpi)
GLP_BT_BPH = _glpkpi.GLP_BT_BPH

_glpkpi.GLP_PP_NONE_swigconstant(_glpkpi)
GLP_PP_NONE = _glpkpi.GLP_PP_NONE

_glpkpi.GLP_PP_ROOT_swigconstant(_glpkpi)
GLP_PP_ROOT = _glpkpi.GLP_PP_ROOT

_glpkpi.GLP_PP_ALL_swigconstant(_glpkpi)
GLP_PP_ALL = _glpkpi.GLP_PP_ALL

class glp_attr(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, glp_attr, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, glp_attr, name)
    __repr__ = _swig_repr
    __swig_setmethods__["level"] = _glpkpi.glp_attr_level_set
    __swig_getmethods__["level"] = _glpkpi.glp_attr_level_get
    if _newclass:
        level = _swig_property(_glpkpi.glp_attr_level_get, _glpkpi.glp_attr_level_set)
    __swig_setmethods__["origin"] = _glpkpi.glp_attr_origin_set
    __swig_getmethods__["origin"] = _glpkpi.glp_attr_origin_get
    if _newclass:
        origin = _swig_property(_glpkpi.glp_attr_origin_get, _glpkpi.glp_attr_origin_set)
    __swig_setmethods__["klass"] = _glpkpi.glp_attr_klass_set
    __swig_getmethods__["klass"] = _glpkpi.glp_attr_klass_get
    if _newclass:
        klass = _swig_property(_glpkpi.glp_attr_klass_get, _glpkpi.glp_attr_klass_set)
    __swig_setmethods__["foo_bar"] = _glpkpi.glp_attr_foo_bar_set
    __swig_getmethods__["foo_bar"] = _glpkpi.glp_attr_foo_bar_get
    if _newclass:
        foo_bar = _swig_property(_glpkpi.glp_attr_foo_bar_get, _glpkpi.glp_attr_foo_bar_set)

    def __init__(self):
        this = _glpkpi.new_glp_attr()
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _glpkpi.delete_glp_attr
    __del__ = lambda self: None
glp_attr_swigregister = _glpkpi.glp_attr_swigregister
glp_attr_swigregister(glp_attr)

_glpkpi.GLP_RF_REG_swigconstant(_glpkpi)
GLP_RF_REG = _glpkpi.GLP_RF_REG

_glpkpi.GLP_RF_LAZY_swigconstant(_glpkpi)
GLP_RF_LAZY = _glpkpi.GLP_RF_LAZY

_glpkpi.GLP_RF_CUT_swigconstant(_glpkpi)
GLP_RF_CUT = _glpkpi.GLP_RF_CUT

_glpkpi.GLP_RF_GMI_swigconstant(_glpkpi)
GLP_RF_GMI = _glpkpi.GLP_RF_GMI

_glpkpi.GLP_RF_MIR_swigconstant(_glpkpi)
GLP_RF_MIR = _glpkpi.GLP_RF_MIR

_glpkpi.GLP_RF_COV_swigconstant(_glpkpi)
GLP_RF_COV = _glpkpi.GLP_RF_COV

_glpkpi.GLP_RF_CLQ_swigconstant(_glpkpi)
GLP_RF_CLQ = _glpkpi.GLP_RF_CLQ


_glpkpi.GLP_ON_swigconstant(_glpkpi)
GLP_ON = _glpkpi.GLP_ON

_glpkpi.GLP_OFF_swigconstant(_glpkpi)
GLP_OFF = _glpkpi.GLP_OFF

_glpkpi.GLP_IROWGEN_swigconstant(_glpkpi)
GLP_IROWGEN = _glpkpi.GLP_IROWGEN

_glpkpi.GLP_IBINGO_swigconstant(_glpkpi)
GLP_IBINGO = _glpkpi.GLP_IBINGO

_glpkpi.GLP_IHEUR_swigconstant(_glpkpi)
GLP_IHEUR = _glpkpi.GLP_IHEUR

_glpkpi.GLP_ICUTGEN_swigconstant(_glpkpi)
GLP_ICUTGEN = _glpkpi.GLP_ICUTGEN

_glpkpi.GLP_IBRANCH_swigconstant(_glpkpi)
GLP_IBRANCH = _glpkpi.GLP_IBRANCH

_glpkpi.GLP_ISELECT_swigconstant(_glpkpi)
GLP_ISELECT = _glpkpi.GLP_ISELECT

_glpkpi.GLP_IPREPRO_swigconstant(_glpkpi)
GLP_IPREPRO = _glpkpi.GLP_IPREPRO

_glpkpi.GLP_NO_BRNCH_swigconstant(_glpkpi)
GLP_NO_BRNCH = _glpkpi.GLP_NO_BRNCH

_glpkpi.GLP_DN_BRNCH_swigconstant(_glpkpi)
GLP_DN_BRNCH = _glpkpi.GLP_DN_BRNCH

_glpkpi.GLP_UP_BRNCH_swigconstant(_glpkpi)
GLP_UP_BRNCH = _glpkpi.GLP_UP_BRNCH

_glpkpi.GLP_EBADB_swigconstant(_glpkpi)
GLP_EBADB = _glpkpi.GLP_EBADB

_glpkpi.GLP_ESING_swigconstant(_glpkpi)
GLP_ESING = _glpkpi.GLP_ESING

_glpkpi.GLP_ECOND_swigconstant(_glpkpi)
GLP_ECOND = _glpkpi.GLP_ECOND

_glpkpi.GLP_EBOUND_swigconstant(_glpkpi)
GLP_EBOUND = _glpkpi.GLP_EBOUND

_glpkpi.GLP_EFAIL_swigconstant(_glpkpi)
GLP_EFAIL = _glpkpi.GLP_EFAIL

_glpkpi.GLP_EOBJLL_swigconstant(_glpkpi)
GLP_EOBJLL = _glpkpi.GLP_EOBJLL

_glpkpi.GLP_EOBJUL_swigconstant(_glpkpi)
GLP_EOBJUL = _glpkpi.GLP_EOBJUL

_glpkpi.GLP_EITLIM_swigconstant(_glpkpi)
GLP_EITLIM = _glpkpi.GLP_EITLIM

_glpkpi.GLP_ETMLIM_swigconstant(_glpkpi)
GLP_ETMLIM = _glpkpi.GLP_ETMLIM

_glpkpi.GLP_ENOPFS_swigconstant(_glpkpi)
GLP_ENOPFS = _glpkpi.GLP_ENOPFS

_glpkpi.GLP_ENODFS_swigconstant(_glpkpi)
GLP_ENODFS = _glpkpi.GLP_ENODFS

_glpkpi.GLP_EROOT_swigconstant(_glpkpi)
GLP_EROOT = _glpkpi.GLP_EROOT

_glpkpi.GLP_ESTOP_swigconstant(_glpkpi)
GLP_ESTOP = _glpkpi.GLP_ESTOP

_glpkpi.GLP_EMIPGAP_swigconstant(_glpkpi)
GLP_EMIPGAP = _glpkpi.GLP_EMIPGAP

_glpkpi.GLP_ENOFEAS_swigconstant(_glpkpi)
GLP_ENOFEAS = _glpkpi.GLP_ENOFEAS

_glpkpi.GLP_ENOCVG_swigconstant(_glpkpi)
GLP_ENOCVG = _glpkpi.GLP_ENOCVG

_glpkpi.GLP_EINSTAB_swigconstant(_glpkpi)
GLP_EINSTAB = _glpkpi.GLP_EINSTAB

_glpkpi.GLP_EDATA_swigconstant(_glpkpi)
GLP_EDATA = _glpkpi.GLP_EDATA

_glpkpi.GLP_ERANGE_swigconstant(_glpkpi)
GLP_ERANGE = _glpkpi.GLP_ERANGE

_glpkpi.GLP_KKT_PE_swigconstant(_glpkpi)
GLP_KKT_PE = _glpkpi.GLP_KKT_PE

_glpkpi.GLP_KKT_PB_swigconstant(_glpkpi)
GLP_KKT_PB = _glpkpi.GLP_KKT_PB

_glpkpi.GLP_KKT_DE_swigconstant(_glpkpi)
GLP_KKT_DE = _glpkpi.GLP_KKT_DE

_glpkpi.GLP_KKT_DB_swigconstant(_glpkpi)
GLP_KKT_DB = _glpkpi.GLP_KKT_DB

_glpkpi.GLP_KKT_CS_swigconstant(_glpkpi)
GLP_KKT_CS = _glpkpi.GLP_KKT_CS

_glpkpi.GLP_MPS_DECK_swigconstant(_glpkpi)
GLP_MPS_DECK = _glpkpi.GLP_MPS_DECK

_glpkpi.GLP_MPS_FILE_swigconstant(_glpkpi)
GLP_MPS_FILE = _glpkpi.GLP_MPS_FILE
class glp_mpscp(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, glp_mpscp, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, glp_mpscp, name)
    __repr__ = _swig_repr
    __swig_setmethods__["blank"] = _glpkpi.glp_mpscp_blank_set
    __swig_getmethods__["blank"] = _glpkpi.glp_mpscp_blank_get
    if _newclass:
        blank = _swig_property(_glpkpi.glp_mpscp_blank_get, _glpkpi.glp_mpscp_blank_set)
    __swig_setmethods__["obj_name"] = _glpkpi.glp_mpscp_obj_name_set
    __swig_getmethods__["obj_name"] = _glpkpi.glp_mpscp_obj_name_get
    if _newclass:
        obj_name = _swig_property(_glpkpi.glp_mpscp_obj_name_get, _glpkpi.glp_mpscp_obj_name_set)
    __swig_setmethods__["tol_mps"] = _glpkpi.glp_mpscp_tol_mps_set
    __swig_getmethods__["tol_mps"] = _glpkpi.glp_mpscp_tol_mps_get
    if _newclass:
        tol_mps = _swig_property(_glpkpi.glp_mpscp_tol_mps_get, _glpkpi.glp_mpscp_tol_mps_set)
    __swig_setmethods__["foo_bar"] = _glpkpi.glp_mpscp_foo_bar_set
    __swig_getmethods__["foo_bar"] = _glpkpi.glp_mpscp_foo_bar_get
    if _newclass:
        foo_bar = _swig_property(_glpkpi.glp_mpscp_foo_bar_get, _glpkpi.glp_mpscp_foo_bar_set)

    def __init__(self):
        this = _glpkpi.new_glp_mpscp()
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _glpkpi.delete_glp_mpscp
    __del__ = lambda self: None
glp_mpscp_swigregister = _glpkpi.glp_mpscp_swigregister
glp_mpscp_swigregister(glp_mpscp)

class glp_cpxcp(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, glp_cpxcp, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, glp_cpxcp, name)
    __repr__ = _swig_repr
    __swig_setmethods__["foo_bar"] = _glpkpi.glp_cpxcp_foo_bar_set
    __swig_getmethods__["foo_bar"] = _glpkpi.glp_cpxcp_foo_bar_get
    if _newclass:
        foo_bar = _swig_property(_glpkpi.glp_cpxcp_foo_bar_get, _glpkpi.glp_cpxcp_foo_bar_set)

    def __init__(self):
        this = _glpkpi.new_glp_cpxcp()
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _glpkpi.delete_glp_cpxcp
    __del__ = lambda self: None
glp_cpxcp_swigregister = _glpkpi.glp_cpxcp_swigregister
glp_cpxcp_swigregister(glp_cpxcp)

class glp_tran(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, glp_tran, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, glp_tran, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_opaque_tran"] = _glpkpi.glp_tran__opaque_tran_set
    __swig_getmethods__["_opaque_tran"] = _glpkpi.glp_tran__opaque_tran_get
    if _newclass:
        _opaque_tran = _swig_property(_glpkpi.glp_tran__opaque_tran_get, _glpkpi.glp_tran__opaque_tran_set)

    def __init__(self):
        this = _glpkpi.new_glp_tran()
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _glpkpi.delete_glp_tran
    __del__ = lambda self: None
glp_tran_swigregister = _glpkpi.glp_tran_swigregister
glp_tran_swigregister(glp_tran)


def glp_create_prob():
    return _glpkpi.glp_create_prob()
glp_create_prob = _glpkpi.glp_create_prob

def glp_set_prob_name(P, name):
    return _glpkpi.glp_set_prob_name(P, name)
glp_set_prob_name = _glpkpi.glp_set_prob_name

def glp_set_obj_name(P, name):
    return _glpkpi.glp_set_obj_name(P, name)
glp_set_obj_name = _glpkpi.glp_set_obj_name

def glp_set_obj_dir(P, dir):
    return _glpkpi.glp_set_obj_dir(P, dir)
glp_set_obj_dir = _glpkpi.glp_set_obj_dir

def glp_add_rows(P, nrs):
    return _glpkpi.glp_add_rows(P, nrs)
glp_add_rows = _glpkpi.glp_add_rows

def glp_add_cols(P, ncs):
    return _glpkpi.glp_add_cols(P, ncs)
glp_add_cols = _glpkpi.glp_add_cols

def glp_set_row_name(P, i, name):
    return _glpkpi.glp_set_row_name(P, i, name)
glp_set_row_name = _glpkpi.glp_set_row_name

def glp_set_col_name(P, j, name):
    return _glpkpi.glp_set_col_name(P, j, name)
glp_set_col_name = _glpkpi.glp_set_col_name

def glp_set_row_bnds(P, i, type, lb, ub):
    return _glpkpi.glp_set_row_bnds(P, i, type, lb, ub)
glp_set_row_bnds = _glpkpi.glp_set_row_bnds

def glp_set_col_bnds(P, j, type, lb, ub):
    return _glpkpi.glp_set_col_bnds(P, j, type, lb, ub)
glp_set_col_bnds = _glpkpi.glp_set_col_bnds

def glp_set_obj_coef(P, j, coef):
    return _glpkpi.glp_set_obj_coef(P, j, coef)
glp_set_obj_coef = _glpkpi.glp_set_obj_coef

def glp_set_mat_row(P, i, len, ind, val):
    return _glpkpi.glp_set_mat_row(P, i, len, ind, val)
glp_set_mat_row = _glpkpi.glp_set_mat_row

def glp_set_mat_col(P, j, len, ind, val):
    return _glpkpi.glp_set_mat_col(P, j, len, ind, val)
glp_set_mat_col = _glpkpi.glp_set_mat_col

def glp_load_matrix(P, ne, ia, ja, ar):
    return _glpkpi.glp_load_matrix(P, ne, ia, ja, ar)
glp_load_matrix = _glpkpi.glp_load_matrix

def glp_check_dup(m, n, ne, ia, ja):
    return _glpkpi.glp_check_dup(m, n, ne, ia, ja)
glp_check_dup = _glpkpi.glp_check_dup

def glp_sort_matrix(P):
    return _glpkpi.glp_sort_matrix(P)
glp_sort_matrix = _glpkpi.glp_sort_matrix

def glp_del_rows(P, nrs, num):
    return _glpkpi.glp_del_rows(P, nrs, num)
glp_del_rows = _glpkpi.glp_del_rows

def glp_del_cols(P, ncs, num):
    return _glpkpi.glp_del_cols(P, ncs, num)
glp_del_cols = _glpkpi.glp_del_cols

def glp_copy_prob(dest, prob, names):
    return _glpkpi.glp_copy_prob(dest, prob, names)
glp_copy_prob = _glpkpi.glp_copy_prob

def glp_erase_prob(P):
    return _glpkpi.glp_erase_prob(P)
glp_erase_prob = _glpkpi.glp_erase_prob

def glp_delete_prob(P):
    return _glpkpi.glp_delete_prob(P)
glp_delete_prob = _glpkpi.glp_delete_prob

def glp_get_prob_name(P):
    return _glpkpi.glp_get_prob_name(P)
glp_get_prob_name = _glpkpi.glp_get_prob_name

def glp_get_obj_name(P):
    return _glpkpi.glp_get_obj_name(P)
glp_get_obj_name = _glpkpi.glp_get_obj_name

def glp_get_obj_dir(P):
    return _glpkpi.glp_get_obj_dir(P)
glp_get_obj_dir = _glpkpi.glp_get_obj_dir

def glp_get_num_rows(P):
    return _glpkpi.glp_get_num_rows(P)
glp_get_num_rows = _glpkpi.glp_get_num_rows

def glp_get_num_cols(P):
    return _glpkpi.glp_get_num_cols(P)
glp_get_num_cols = _glpkpi.glp_get_num_cols

def glp_get_row_name(P, i):
    return _glpkpi.glp_get_row_name(P, i)
glp_get_row_name = _glpkpi.glp_get_row_name

def glp_get_col_name(P, j):
    return _glpkpi.glp_get_col_name(P, j)
glp_get_col_name = _glpkpi.glp_get_col_name

def glp_get_row_type(P, i):
    return _glpkpi.glp_get_row_type(P, i)
glp_get_row_type = _glpkpi.glp_get_row_type

def glp_get_row_lb(P, i):
    return _glpkpi.glp_get_row_lb(P, i)
glp_get_row_lb = _glpkpi.glp_get_row_lb

def glp_get_row_ub(P, i):
    return _glpkpi.glp_get_row_ub(P, i)
glp_get_row_ub = _glpkpi.glp_get_row_ub

def glp_get_col_type(P, j):
    return _glpkpi.glp_get_col_type(P, j)
glp_get_col_type = _glpkpi.glp_get_col_type

def glp_get_col_lb(P, j):
    return _glpkpi.glp_get_col_lb(P, j)
glp_get_col_lb = _glpkpi.glp_get_col_lb

def glp_get_col_ub(P, j):
    return _glpkpi.glp_get_col_ub(P, j)
glp_get_col_ub = _glpkpi.glp_get_col_ub

def glp_get_obj_coef(P, j):
    return _glpkpi.glp_get_obj_coef(P, j)
glp_get_obj_coef = _glpkpi.glp_get_obj_coef

def glp_get_num_nz(P):
    return _glpkpi.glp_get_num_nz(P)
glp_get_num_nz = _glpkpi.glp_get_num_nz

def glp_get_mat_row(P, i, ind, val):
    return _glpkpi.glp_get_mat_row(P, i, ind, val)
glp_get_mat_row = _glpkpi.glp_get_mat_row

def glp_get_mat_col(P, j, ind, val):
    return _glpkpi.glp_get_mat_col(P, j, ind, val)
glp_get_mat_col = _glpkpi.glp_get_mat_col

def glp_create_index(P):
    return _glpkpi.glp_create_index(P)
glp_create_index = _glpkpi.glp_create_index

def glp_find_row(P, name):
    return _glpkpi.glp_find_row(P, name)
glp_find_row = _glpkpi.glp_find_row

def glp_find_col(P, name):
    return _glpkpi.glp_find_col(P, name)
glp_find_col = _glpkpi.glp_find_col

def glp_delete_index(P):
    return _glpkpi.glp_delete_index(P)
glp_delete_index = _glpkpi.glp_delete_index

def glp_set_rii(P, i, rii):
    return _glpkpi.glp_set_rii(P, i, rii)
glp_set_rii = _glpkpi.glp_set_rii

def glp_set_sjj(P, j, sjj):
    return _glpkpi.glp_set_sjj(P, j, sjj)
glp_set_sjj = _glpkpi.glp_set_sjj

def glp_get_rii(P, i):
    return _glpkpi.glp_get_rii(P, i)
glp_get_rii = _glpkpi.glp_get_rii

def glp_get_sjj(P, j):
    return _glpkpi.glp_get_sjj(P, j)
glp_get_sjj = _glpkpi.glp_get_sjj

def glp_scale_prob(P, flags):
    return _glpkpi.glp_scale_prob(P, flags)
glp_scale_prob = _glpkpi.glp_scale_prob

def glp_unscale_prob(P):
    return _glpkpi.glp_unscale_prob(P)
glp_unscale_prob = _glpkpi.glp_unscale_prob

def glp_set_row_stat(P, i, stat):
    return _glpkpi.glp_set_row_stat(P, i, stat)
glp_set_row_stat = _glpkpi.glp_set_row_stat

def glp_set_col_stat(P, j, stat):
    return _glpkpi.glp_set_col_stat(P, j, stat)
glp_set_col_stat = _glpkpi.glp_set_col_stat

def glp_std_basis(P):
    return _glpkpi.glp_std_basis(P)
glp_std_basis = _glpkpi.glp_std_basis

def glp_adv_basis(P, flags):
    return _glpkpi.glp_adv_basis(P, flags)
glp_adv_basis = _glpkpi.glp_adv_basis

def glp_cpx_basis(P):
    return _glpkpi.glp_cpx_basis(P)
glp_cpx_basis = _glpkpi.glp_cpx_basis

def glp_simplex(P, parm):
    return _glpkpi.glp_simplex(P, parm)
glp_simplex = _glpkpi.glp_simplex

def glp_exact(P, parm):
    return _glpkpi.glp_exact(P, parm)
glp_exact = _glpkpi.glp_exact

def glp_init_smcp(parm):
    return _glpkpi.glp_init_smcp(parm)
glp_init_smcp = _glpkpi.glp_init_smcp

def glp_get_status(P):
    return _glpkpi.glp_get_status(P)
glp_get_status = _glpkpi.glp_get_status

def glp_get_prim_stat(P):
    return _glpkpi.glp_get_prim_stat(P)
glp_get_prim_stat = _glpkpi.glp_get_prim_stat

def glp_get_dual_stat(P):
    return _glpkpi.glp_get_dual_stat(P)
glp_get_dual_stat = _glpkpi.glp_get_dual_stat

def glp_get_obj_val(P):
    return _glpkpi.glp_get_obj_val(P)
glp_get_obj_val = _glpkpi.glp_get_obj_val

def glp_get_row_stat(P, i):
    return _glpkpi.glp_get_row_stat(P, i)
glp_get_row_stat = _glpkpi.glp_get_row_stat

def glp_get_row_prim(P, i):
    return _glpkpi.glp_get_row_prim(P, i)
glp_get_row_prim = _glpkpi.glp_get_row_prim

def glp_get_row_dual(P, i):
    return _glpkpi.glp_get_row_dual(P, i)
glp_get_row_dual = _glpkpi.glp_get_row_dual

def glp_get_col_stat(P, j):
    return _glpkpi.glp_get_col_stat(P, j)
glp_get_col_stat = _glpkpi.glp_get_col_stat

def glp_get_col_prim(P, j):
    return _glpkpi.glp_get_col_prim(P, j)
glp_get_col_prim = _glpkpi.glp_get_col_prim

def glp_get_col_dual(P, j):
    return _glpkpi.glp_get_col_dual(P, j)
glp_get_col_dual = _glpkpi.glp_get_col_dual

def glp_get_unbnd_ray(P):
    return _glpkpi.glp_get_unbnd_ray(P)
glp_get_unbnd_ray = _glpkpi.glp_get_unbnd_ray

def glp_interior(P, parm):
    return _glpkpi.glp_interior(P, parm)
glp_interior = _glpkpi.glp_interior

def glp_init_iptcp(parm):
    return _glpkpi.glp_init_iptcp(parm)
glp_init_iptcp = _glpkpi.glp_init_iptcp

def glp_ipt_status(P):
    return _glpkpi.glp_ipt_status(P)
glp_ipt_status = _glpkpi.glp_ipt_status

def glp_ipt_obj_val(P):
    return _glpkpi.glp_ipt_obj_val(P)
glp_ipt_obj_val = _glpkpi.glp_ipt_obj_val

def glp_ipt_row_prim(P, i):
    return _glpkpi.glp_ipt_row_prim(P, i)
glp_ipt_row_prim = _glpkpi.glp_ipt_row_prim

def glp_ipt_row_dual(P, i):
    return _glpkpi.glp_ipt_row_dual(P, i)
glp_ipt_row_dual = _glpkpi.glp_ipt_row_dual

def glp_ipt_col_prim(P, j):
    return _glpkpi.glp_ipt_col_prim(P, j)
glp_ipt_col_prim = _glpkpi.glp_ipt_col_prim

def glp_ipt_col_dual(P, j):
    return _glpkpi.glp_ipt_col_dual(P, j)
glp_ipt_col_dual = _glpkpi.glp_ipt_col_dual

def glp_set_col_kind(P, j, kind):
    return _glpkpi.glp_set_col_kind(P, j, kind)
glp_set_col_kind = _glpkpi.glp_set_col_kind

def glp_get_col_kind(P, j):
    return _glpkpi.glp_get_col_kind(P, j)
glp_get_col_kind = _glpkpi.glp_get_col_kind

def glp_get_num_int(P):
    return _glpkpi.glp_get_num_int(P)
glp_get_num_int = _glpkpi.glp_get_num_int

def glp_get_num_bin(P):
    return _glpkpi.glp_get_num_bin(P)
glp_get_num_bin = _glpkpi.glp_get_num_bin

def glp_intopt(P, parm):
    return _glpkpi.glp_intopt(P, parm)
glp_intopt = _glpkpi.glp_intopt

def glp_init_iocp(parm):
    return _glpkpi.glp_init_iocp(parm)
glp_init_iocp = _glpkpi.glp_init_iocp

def glp_mip_status(P):
    return _glpkpi.glp_mip_status(P)
glp_mip_status = _glpkpi.glp_mip_status

def glp_mip_obj_val(P):
    return _glpkpi.glp_mip_obj_val(P)
glp_mip_obj_val = _glpkpi.glp_mip_obj_val

def glp_mip_row_val(P, i):
    return _glpkpi.glp_mip_row_val(P, i)
glp_mip_row_val = _glpkpi.glp_mip_row_val

def glp_mip_col_val(P, j):
    return _glpkpi.glp_mip_col_val(P, j)
glp_mip_col_val = _glpkpi.glp_mip_col_val

def glp_print_sol(P, fname):
    return _glpkpi.glp_print_sol(P, fname)
glp_print_sol = _glpkpi.glp_print_sol

def glp_read_sol(P, fname):
    return _glpkpi.glp_read_sol(P, fname)
glp_read_sol = _glpkpi.glp_read_sol

def glp_write_sol(P, fname):
    return _glpkpi.glp_write_sol(P, fname)
glp_write_sol = _glpkpi.glp_write_sol

def glp_print_ranges(P, len, list, flags, fname):
    return _glpkpi.glp_print_ranges(P, len, list, flags, fname)
glp_print_ranges = _glpkpi.glp_print_ranges

def glp_print_ipt(P, fname):
    return _glpkpi.glp_print_ipt(P, fname)
glp_print_ipt = _glpkpi.glp_print_ipt

def glp_read_ipt(P, fname):
    return _glpkpi.glp_read_ipt(P, fname)
glp_read_ipt = _glpkpi.glp_read_ipt

def glp_write_ipt(P, fname):
    return _glpkpi.glp_write_ipt(P, fname)
glp_write_ipt = _glpkpi.glp_write_ipt

def glp_print_mip(P, fname):
    return _glpkpi.glp_print_mip(P, fname)
glp_print_mip = _glpkpi.glp_print_mip

def glp_read_mip(P, fname):
    return _glpkpi.glp_read_mip(P, fname)
glp_read_mip = _glpkpi.glp_read_mip

def glp_write_mip(P, fname):
    return _glpkpi.glp_write_mip(P, fname)
glp_write_mip = _glpkpi.glp_write_mip

def glp_bf_exists(P):
    return _glpkpi.glp_bf_exists(P)
glp_bf_exists = _glpkpi.glp_bf_exists

def glp_factorize(P):
    return _glpkpi.glp_factorize(P)
glp_factorize = _glpkpi.glp_factorize

def glp_bf_updated(P):
    return _glpkpi.glp_bf_updated(P)
glp_bf_updated = _glpkpi.glp_bf_updated

def glp_get_bfcp(P, parm):
    return _glpkpi.glp_get_bfcp(P, parm)
glp_get_bfcp = _glpkpi.glp_get_bfcp

def glp_set_bfcp(P, parm):
    return _glpkpi.glp_set_bfcp(P, parm)
glp_set_bfcp = _glpkpi.glp_set_bfcp

def glp_get_bhead(P, k):
    return _glpkpi.glp_get_bhead(P, k)
glp_get_bhead = _glpkpi.glp_get_bhead

def glp_get_row_bind(P, i):
    return _glpkpi.glp_get_row_bind(P, i)
glp_get_row_bind = _glpkpi.glp_get_row_bind

def glp_get_col_bind(P, j):
    return _glpkpi.glp_get_col_bind(P, j)
glp_get_col_bind = _glpkpi.glp_get_col_bind

def glp_ftran(P, x):
    return _glpkpi.glp_ftran(P, x)
glp_ftran = _glpkpi.glp_ftran

def glp_btran(P, x):
    return _glpkpi.glp_btran(P, x)
glp_btran = _glpkpi.glp_btran

def glp_warm_up(P):
    return _glpkpi.glp_warm_up(P)
glp_warm_up = _glpkpi.glp_warm_up

def glp_eval_tab_row(P, k, ind, val):
    return _glpkpi.glp_eval_tab_row(P, k, ind, val)
glp_eval_tab_row = _glpkpi.glp_eval_tab_row

def glp_eval_tab_col(P, k, ind, val):
    return _glpkpi.glp_eval_tab_col(P, k, ind, val)
glp_eval_tab_col = _glpkpi.glp_eval_tab_col

def glp_transform_row(P, len, ind, val):
    return _glpkpi.glp_transform_row(P, len, ind, val)
glp_transform_row = _glpkpi.glp_transform_row

def glp_transform_col(P, len, ind, val):
    return _glpkpi.glp_transform_col(P, len, ind, val)
glp_transform_col = _glpkpi.glp_transform_col

def glp_prim_rtest(P, len, ind, val, dir, eps):
    return _glpkpi.glp_prim_rtest(P, len, ind, val, dir, eps)
glp_prim_rtest = _glpkpi.glp_prim_rtest

def glp_dual_rtest(P, len, ind, val, dir, eps):
    return _glpkpi.glp_dual_rtest(P, len, ind, val, dir, eps)
glp_dual_rtest = _glpkpi.glp_dual_rtest

def glp_analyze_bound(P, k, value1, var1, value2, var2):
    return _glpkpi.glp_analyze_bound(P, k, value1, var1, value2, var2)
glp_analyze_bound = _glpkpi.glp_analyze_bound

def glp_analyze_coef(P, k, coef1, var1, value1, coef2, var2, value2):
    return _glpkpi.glp_analyze_coef(P, k, coef1, var1, value1, coef2, var2, value2)
glp_analyze_coef = _glpkpi.glp_analyze_coef

def glp_ios_reason(T):
    return _glpkpi.glp_ios_reason(T)
glp_ios_reason = _glpkpi.glp_ios_reason

def glp_ios_get_prob(T):
    return _glpkpi.glp_ios_get_prob(T)
glp_ios_get_prob = _glpkpi.glp_ios_get_prob

def glp_ios_tree_size(T, a_cnt, n_cnt, t_cnt):
    return _glpkpi.glp_ios_tree_size(T, a_cnt, n_cnt, t_cnt)
glp_ios_tree_size = _glpkpi.glp_ios_tree_size

def glp_ios_curr_node(T):
    return _glpkpi.glp_ios_curr_node(T)
glp_ios_curr_node = _glpkpi.glp_ios_curr_node

def glp_ios_next_node(T, p):
    return _glpkpi.glp_ios_next_node(T, p)
glp_ios_next_node = _glpkpi.glp_ios_next_node

def glp_ios_prev_node(T, p):
    return _glpkpi.glp_ios_prev_node(T, p)
glp_ios_prev_node = _glpkpi.glp_ios_prev_node

def glp_ios_up_node(T, p):
    return _glpkpi.glp_ios_up_node(T, p)
glp_ios_up_node = _glpkpi.glp_ios_up_node

def glp_ios_node_level(T, p):
    return _glpkpi.glp_ios_node_level(T, p)
glp_ios_node_level = _glpkpi.glp_ios_node_level

def glp_ios_node_bound(T, p):
    return _glpkpi.glp_ios_node_bound(T, p)
glp_ios_node_bound = _glpkpi.glp_ios_node_bound

def glp_ios_best_node(T):
    return _glpkpi.glp_ios_best_node(T)
glp_ios_best_node = _glpkpi.glp_ios_best_node

def glp_ios_mip_gap(T):
    return _glpkpi.glp_ios_mip_gap(T)
glp_ios_mip_gap = _glpkpi.glp_ios_mip_gap

def glp_ios_node_data(T, p):
    return _glpkpi.glp_ios_node_data(T, p)
glp_ios_node_data = _glpkpi.glp_ios_node_data

def glp_ios_row_attr(T, i, attr):
    return _glpkpi.glp_ios_row_attr(T, i, attr)
glp_ios_row_attr = _glpkpi.glp_ios_row_attr

def glp_ios_pool_size(T):
    return _glpkpi.glp_ios_pool_size(T)
glp_ios_pool_size = _glpkpi.glp_ios_pool_size

def glp_ios_add_row(T, name, klass, flags, len, ind, val, type, rhs):
    return _glpkpi.glp_ios_add_row(T, name, klass, flags, len, ind, val, type, rhs)
glp_ios_add_row = _glpkpi.glp_ios_add_row

def glp_ios_del_row(T, i):
    return _glpkpi.glp_ios_del_row(T, i)
glp_ios_del_row = _glpkpi.glp_ios_del_row

def glp_ios_clear_pool(T):
    return _glpkpi.glp_ios_clear_pool(T)
glp_ios_clear_pool = _glpkpi.glp_ios_clear_pool

def glp_ios_can_branch(T, j):
    return _glpkpi.glp_ios_can_branch(T, j)
glp_ios_can_branch = _glpkpi.glp_ios_can_branch

def glp_ios_branch_upon(T, j, sel):
    return _glpkpi.glp_ios_branch_upon(T, j, sel)
glp_ios_branch_upon = _glpkpi.glp_ios_branch_upon

def glp_ios_select_node(T, p):
    return _glpkpi.glp_ios_select_node(T, p)
glp_ios_select_node = _glpkpi.glp_ios_select_node

def glp_ios_heur_sol(T, x):
    return _glpkpi.glp_ios_heur_sol(T, x)
glp_ios_heur_sol = _glpkpi.glp_ios_heur_sol

def glp_ios_terminate(T):
    return _glpkpi.glp_ios_terminate(T)
glp_ios_terminate = _glpkpi.glp_ios_terminate

def glp_init_mpscp(parm):
    return _glpkpi.glp_init_mpscp(parm)
glp_init_mpscp = _glpkpi.glp_init_mpscp

def glp_read_mps(P, fmt, parm, fname):
    return _glpkpi.glp_read_mps(P, fmt, parm, fname)
glp_read_mps = _glpkpi.glp_read_mps

def glp_write_mps(P, fmt, parm, fname):
    return _glpkpi.glp_write_mps(P, fmt, parm, fname)
glp_write_mps = _glpkpi.glp_write_mps

def glp_init_cpxcp(parm):
    return _glpkpi.glp_init_cpxcp(parm)
glp_init_cpxcp = _glpkpi.glp_init_cpxcp

def glp_read_lp(P, parm, fname):
    return _glpkpi.glp_read_lp(P, parm, fname)
glp_read_lp = _glpkpi.glp_read_lp

def glp_write_lp(P, parm, fname):
    return _glpkpi.glp_write_lp(P, parm, fname)
glp_write_lp = _glpkpi.glp_write_lp

def glp_read_prob(P, flags, fname):
    return _glpkpi.glp_read_prob(P, flags, fname)
glp_read_prob = _glpkpi.glp_read_prob

def glp_write_prob(P, flags, fname):
    return _glpkpi.glp_write_prob(P, flags, fname)
glp_write_prob = _glpkpi.glp_write_prob

def glp_mpl_alloc_wksp():
    return _glpkpi.glp_mpl_alloc_wksp()
glp_mpl_alloc_wksp = _glpkpi.glp_mpl_alloc_wksp

def glp_mpl_read_model(tran, fname, skip):
    return _glpkpi.glp_mpl_read_model(tran, fname, skip)
glp_mpl_read_model = _glpkpi.glp_mpl_read_model

def glp_mpl_read_data(tran, fname):
    return _glpkpi.glp_mpl_read_data(tran, fname)
glp_mpl_read_data = _glpkpi.glp_mpl_read_data

def glp_mpl_generate(tran, fname):
    return _glpkpi.glp_mpl_generate(tran, fname)
glp_mpl_generate = _glpkpi.glp_mpl_generate

def glp_mpl_build_prob(tran, prob):
    return _glpkpi.glp_mpl_build_prob(tran, prob)
glp_mpl_build_prob = _glpkpi.glp_mpl_build_prob

def glp_mpl_postsolve(tran, prob, sol):
    return _glpkpi.glp_mpl_postsolve(tran, prob, sol)
glp_mpl_postsolve = _glpkpi.glp_mpl_postsolve

def glp_mpl_free_wksp(tran):
    return _glpkpi.glp_mpl_free_wksp(tran)
glp_mpl_free_wksp = _glpkpi.glp_mpl_free_wksp

def glp_main(argc, argv):
    return _glpkpi.glp_main(argc, argv)
glp_main = _glpkpi.glp_main
class glp_long(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, glp_long, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, glp_long, name)
    __repr__ = _swig_repr
    __swig_setmethods__["lo"] = _glpkpi.glp_long_lo_set
    __swig_getmethods__["lo"] = _glpkpi.glp_long_lo_get
    if _newclass:
        lo = _swig_property(_glpkpi.glp_long_lo_get, _glpkpi.glp_long_lo_set)
    __swig_setmethods__["hi"] = _glpkpi.glp_long_hi_set
    __swig_getmethods__["hi"] = _glpkpi.glp_long_hi_get
    if _newclass:
        hi = _swig_property(_glpkpi.glp_long_hi_get, _glpkpi.glp_long_hi_set)

    def __init__(self):
        this = _glpkpi.new_glp_long()
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _glpkpi.delete_glp_long
    __del__ = lambda self: None
glp_long_swigregister = _glpkpi.glp_long_swigregister
glp_long_swigregister(glp_long)


def glp_init_env():
    return _glpkpi.glp_init_env()
glp_init_env = _glpkpi.glp_init_env

def glp_version():
    return _glpkpi.glp_version()
glp_version = _glpkpi.glp_version

def glp_free_env():
    return _glpkpi.glp_free_env()
glp_free_env = _glpkpi.glp_free_env

def glp_printf(fmt):
    return _glpkpi.glp_printf(fmt)
glp_printf = _glpkpi.glp_printf

def glp_term_out(flag):
    return _glpkpi.glp_term_out(flag)
glp_term_out = _glpkpi.glp_term_out

def glp_term_hook(func, info):
    return _glpkpi.glp_term_hook(func, info)
glp_term_hook = _glpkpi.glp_term_hook

def glp_open_tee(fname):
    return _glpkpi.glp_open_tee(fname)
glp_open_tee = _glpkpi.glp_open_tee

def glp_close_tee():
    return _glpkpi.glp_close_tee()
glp_close_tee = _glpkpi.glp_close_tee

def glp_error_(file, line):
    return _glpkpi.glp_error_(file, line)
glp_error_ = _glpkpi.glp_error_

def glp_assert_(expr, file, line):
    return _glpkpi.glp_assert_(expr, file, line)
glp_assert_ = _glpkpi.glp_assert_

def glp_error_hook(func, info):
    return _glpkpi.glp_error_hook(func, info)
glp_error_hook = _glpkpi.glp_error_hook

def glp_malloc(size):
    return _glpkpi.glp_malloc(size)
glp_malloc = _glpkpi.glp_malloc

def glp_calloc(n, size):
    return _glpkpi.glp_calloc(n, size)
glp_calloc = _glpkpi.glp_calloc

def glp_free(ptr):
    return _glpkpi.glp_free(ptr)
glp_free = _glpkpi.glp_free

def glp_mem_limit(limit):
    return _glpkpi.glp_mem_limit(limit)
glp_mem_limit = _glpkpi.glp_mem_limit

def glp_mem_usage(count, cpeak, total, tpeak):
    return _glpkpi.glp_mem_usage(count, cpeak, total, tpeak)
glp_mem_usage = _glpkpi.glp_mem_usage

def glp_time():
    return _glpkpi.glp_time()
glp_time = _glpkpi.glp_time

def glp_difftime(t1, t0):
    return _glpkpi.glp_difftime(t1, t0)
glp_difftime = _glpkpi.glp_difftime
class glp_data(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, glp_data, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, glp_data, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_opaque_data"] = _glpkpi.glp_data__opaque_data_set
    __swig_getmethods__["_opaque_data"] = _glpkpi.glp_data__opaque_data_get
    if _newclass:
        _opaque_data = _swig_property(_glpkpi.glp_data__opaque_data_get, _glpkpi.glp_data__opaque_data_set)

    def __init__(self):
        this = _glpkpi.new_glp_data()
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _glpkpi.delete_glp_data
    __del__ = lambda self: None
glp_data_swigregister = _glpkpi.glp_data_swigregister
glp_data_swigregister(glp_data)


def glp_sdf_open_file(fname):
    return _glpkpi.glp_sdf_open_file(fname)
glp_sdf_open_file = _glpkpi.glp_sdf_open_file

def glp_sdf_set_jump(data, jump):
    return _glpkpi.glp_sdf_set_jump(data, jump)
glp_sdf_set_jump = _glpkpi.glp_sdf_set_jump

def glp_sdf_error(data, fmt):
    return _glpkpi.glp_sdf_error(data, fmt)
glp_sdf_error = _glpkpi.glp_sdf_error

def glp_sdf_warning(data, fmt):
    return _glpkpi.glp_sdf_warning(data, fmt)
glp_sdf_warning = _glpkpi.glp_sdf_warning

def glp_sdf_read_int(data):
    return _glpkpi.glp_sdf_read_int(data)
glp_sdf_read_int = _glpkpi.glp_sdf_read_int

def glp_sdf_read_num(data):
    return _glpkpi.glp_sdf_read_num(data)
glp_sdf_read_num = _glpkpi.glp_sdf_read_num

def glp_sdf_read_item(data):
    return _glpkpi.glp_sdf_read_item(data)
glp_sdf_read_item = _glpkpi.glp_sdf_read_item

def glp_sdf_read_text(data):
    return _glpkpi.glp_sdf_read_text(data)
glp_sdf_read_text = _glpkpi.glp_sdf_read_text

def glp_sdf_line(data):
    return _glpkpi.glp_sdf_line(data)
glp_sdf_line = _glpkpi.glp_sdf_line

def glp_sdf_close_file(data):
    return _glpkpi.glp_sdf_close_file(data)
glp_sdf_close_file = _glpkpi.glp_sdf_close_file
class _glp_graph(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, _glp_graph, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, _glp_graph, name)
    __repr__ = _swig_repr
    __swig_setmethods__["pool"] = _glpkpi._glp_graph_pool_set
    __swig_getmethods__["pool"] = _glpkpi._glp_graph_pool_get
    if _newclass:
        pool = _swig_property(_glpkpi._glp_graph_pool_get, _glpkpi._glp_graph_pool_set)
    __swig_setmethods__["name"] = _glpkpi._glp_graph_name_set
    __swig_getmethods__["name"] = _glpkpi._glp_graph_name_get
    if _newclass:
        name = _swig_property(_glpkpi._glp_graph_name_get, _glpkpi._glp_graph_name_set)
    __swig_setmethods__["nv_max"] = _glpkpi._glp_graph_nv_max_set
    __swig_getmethods__["nv_max"] = _glpkpi._glp_graph_nv_max_get
    if _newclass:
        nv_max = _swig_property(_glpkpi._glp_graph_nv_max_get, _glpkpi._glp_graph_nv_max_set)
    __swig_setmethods__["nv"] = _glpkpi._glp_graph_nv_set
    __swig_getmethods__["nv"] = _glpkpi._glp_graph_nv_get
    if _newclass:
        nv = _swig_property(_glpkpi._glp_graph_nv_get, _glpkpi._glp_graph_nv_set)
    __swig_setmethods__["na"] = _glpkpi._glp_graph_na_set
    __swig_getmethods__["na"] = _glpkpi._glp_graph_na_get
    if _newclass:
        na = _swig_property(_glpkpi._glp_graph_na_get, _glpkpi._glp_graph_na_set)
    __swig_setmethods__["v"] = _glpkpi._glp_graph_v_set
    __swig_getmethods__["v"] = _glpkpi._glp_graph_v_get
    if _newclass:
        v = _swig_property(_glpkpi._glp_graph_v_get, _glpkpi._glp_graph_v_set)
    __swig_setmethods__["index"] = _glpkpi._glp_graph_index_set
    __swig_getmethods__["index"] = _glpkpi._glp_graph_index_get
    if _newclass:
        index = _swig_property(_glpkpi._glp_graph_index_get, _glpkpi._glp_graph_index_set)
    __swig_setmethods__["v_size"] = _glpkpi._glp_graph_v_size_set
    __swig_getmethods__["v_size"] = _glpkpi._glp_graph_v_size_get
    if _newclass:
        v_size = _swig_property(_glpkpi._glp_graph_v_size_get, _glpkpi._glp_graph_v_size_set)
    __swig_setmethods__["a_size"] = _glpkpi._glp_graph_a_size_set
    __swig_getmethods__["a_size"] = _glpkpi._glp_graph_a_size_get
    if _newclass:
        a_size = _swig_property(_glpkpi._glp_graph_a_size_get, _glpkpi._glp_graph_a_size_set)

    def __init__(self):
        this = _glpkpi.new__glp_graph()
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _glpkpi.delete__glp_graph
    __del__ = lambda self: None
_glp_graph_swigregister = _glpkpi._glp_graph_swigregister
_glp_graph_swigregister(_glp_graph)

class _glp_vertex(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, _glp_vertex, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, _glp_vertex, name)
    __repr__ = _swig_repr
    __swig_setmethods__["i"] = _glpkpi._glp_vertex_i_set
    __swig_getmethods__["i"] = _glpkpi._glp_vertex_i_get
    if _newclass:
        i = _swig_property(_glpkpi._glp_vertex_i_get, _glpkpi._glp_vertex_i_set)
    __swig_setmethods__["name"] = _glpkpi._glp_vertex_name_set
    __swig_getmethods__["name"] = _glpkpi._glp_vertex_name_get
    if _newclass:
        name = _swig_property(_glpkpi._glp_vertex_name_get, _glpkpi._glp_vertex_name_set)
    __swig_setmethods__["entry"] = _glpkpi._glp_vertex_entry_set
    __swig_getmethods__["entry"] = _glpkpi._glp_vertex_entry_get
    if _newclass:
        entry = _swig_property(_glpkpi._glp_vertex_entry_get, _glpkpi._glp_vertex_entry_set)
    __swig_setmethods__["data"] = _glpkpi._glp_vertex_data_set
    __swig_getmethods__["data"] = _glpkpi._glp_vertex_data_get
    if _newclass:
        data = _swig_property(_glpkpi._glp_vertex_data_get, _glpkpi._glp_vertex_data_set)
    __swig_setmethods__["temp"] = _glpkpi._glp_vertex_temp_set
    __swig_getmethods__["temp"] = _glpkpi._glp_vertex_temp_get
    if _newclass:
        temp = _swig_property(_glpkpi._glp_vertex_temp_get, _glpkpi._glp_vertex_temp_set)
    __swig_setmethods__["_in"] = _glpkpi._glp_vertex__in_set
    __swig_getmethods__["_in"] = _glpkpi._glp_vertex__in_get
    if _newclass:
        _in = _swig_property(_glpkpi._glp_vertex__in_get, _glpkpi._glp_vertex__in_set)
    __swig_setmethods__["out"] = _glpkpi._glp_vertex_out_set
    __swig_getmethods__["out"] = _glpkpi._glp_vertex_out_get
    if _newclass:
        out = _swig_property(_glpkpi._glp_vertex_out_get, _glpkpi._glp_vertex_out_set)

    def __init__(self):
        this = _glpkpi.new__glp_vertex()
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _glpkpi.delete__glp_vertex
    __del__ = lambda self: None
_glp_vertex_swigregister = _glpkpi._glp_vertex_swigregister
_glp_vertex_swigregister(_glp_vertex)

class _glp_arc(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, _glp_arc, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, _glp_arc, name)
    __repr__ = _swig_repr
    __swig_setmethods__["tail"] = _glpkpi._glp_arc_tail_set
    __swig_getmethods__["tail"] = _glpkpi._glp_arc_tail_get
    if _newclass:
        tail = _swig_property(_glpkpi._glp_arc_tail_get, _glpkpi._glp_arc_tail_set)
    __swig_setmethods__["head"] = _glpkpi._glp_arc_head_set
    __swig_getmethods__["head"] = _glpkpi._glp_arc_head_get
    if _newclass:
        head = _swig_property(_glpkpi._glp_arc_head_get, _glpkpi._glp_arc_head_set)
    __swig_setmethods__["data"] = _glpkpi._glp_arc_data_set
    __swig_getmethods__["data"] = _glpkpi._glp_arc_data_get
    if _newclass:
        data = _swig_property(_glpkpi._glp_arc_data_get, _glpkpi._glp_arc_data_set)
    __swig_setmethods__["temp"] = _glpkpi._glp_arc_temp_set
    __swig_getmethods__["temp"] = _glpkpi._glp_arc_temp_get
    if _newclass:
        temp = _swig_property(_glpkpi._glp_arc_temp_get, _glpkpi._glp_arc_temp_set)
    __swig_setmethods__["t_prev"] = _glpkpi._glp_arc_t_prev_set
    __swig_getmethods__["t_prev"] = _glpkpi._glp_arc_t_prev_get
    if _newclass:
        t_prev = _swig_property(_glpkpi._glp_arc_t_prev_get, _glpkpi._glp_arc_t_prev_set)
    __swig_setmethods__["t_next"] = _glpkpi._glp_arc_t_next_set
    __swig_getmethods__["t_next"] = _glpkpi._glp_arc_t_next_get
    if _newclass:
        t_next = _swig_property(_glpkpi._glp_arc_t_next_get, _glpkpi._glp_arc_t_next_set)
    __swig_setmethods__["h_prev"] = _glpkpi._glp_arc_h_prev_set
    __swig_getmethods__["h_prev"] = _glpkpi._glp_arc_h_prev_get
    if _newclass:
        h_prev = _swig_property(_glpkpi._glp_arc_h_prev_get, _glpkpi._glp_arc_h_prev_set)
    __swig_setmethods__["h_next"] = _glpkpi._glp_arc_h_next_set
    __swig_getmethods__["h_next"] = _glpkpi._glp_arc_h_next_get
    if _newclass:
        h_next = _swig_property(_glpkpi._glp_arc_h_next_get, _glpkpi._glp_arc_h_next_set)

    def __init__(self):
        this = _glpkpi.new__glp_arc()
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _glpkpi.delete__glp_arc
    __del__ = lambda self: None
_glp_arc_swigregister = _glpkpi._glp_arc_swigregister
_glp_arc_swigregister(_glp_arc)


def glp_create_graph(v_size, a_size):
    return _glpkpi.glp_create_graph(v_size, a_size)
glp_create_graph = _glpkpi.glp_create_graph

def glp_set_graph_name(G, name):
    return _glpkpi.glp_set_graph_name(G, name)
glp_set_graph_name = _glpkpi.glp_set_graph_name

def glp_add_vertices(G, nadd):
    return _glpkpi.glp_add_vertices(G, nadd)
glp_add_vertices = _glpkpi.glp_add_vertices

def glp_set_vertex_name(G, i, name):
    return _glpkpi.glp_set_vertex_name(G, i, name)
glp_set_vertex_name = _glpkpi.glp_set_vertex_name

def glp_add_arc(G, i, j):
    return _glpkpi.glp_add_arc(G, i, j)
glp_add_arc = _glpkpi.glp_add_arc

def glp_del_vertices(G, ndel, num):
    return _glpkpi.glp_del_vertices(G, ndel, num)
glp_del_vertices = _glpkpi.glp_del_vertices

def glp_del_arc(G, a):
    return _glpkpi.glp_del_arc(G, a)
glp_del_arc = _glpkpi.glp_del_arc

def glp_erase_graph(G, v_size, a_size):
    return _glpkpi.glp_erase_graph(G, v_size, a_size)
glp_erase_graph = _glpkpi.glp_erase_graph

def glp_delete_graph(G):
    return _glpkpi.glp_delete_graph(G)
glp_delete_graph = _glpkpi.glp_delete_graph

def glp_create_v_index(G):
    return _glpkpi.glp_create_v_index(G)
glp_create_v_index = _glpkpi.glp_create_v_index

def glp_find_vertex(G, name):
    return _glpkpi.glp_find_vertex(G, name)
glp_find_vertex = _glpkpi.glp_find_vertex

def glp_delete_v_index(G):
    return _glpkpi.glp_delete_v_index(G)
glp_delete_v_index = _glpkpi.glp_delete_v_index

def glp_read_graph(G, fname):
    return _glpkpi.glp_read_graph(G, fname)
glp_read_graph = _glpkpi.glp_read_graph

def glp_write_graph(G, fname):
    return _glpkpi.glp_write_graph(G, fname)
glp_write_graph = _glpkpi.glp_write_graph

def glp_mincost_lp(P, G, names, v_rhs, a_low, a_cap, a_cost):
    return _glpkpi.glp_mincost_lp(P, G, names, v_rhs, a_low, a_cap, a_cost)
glp_mincost_lp = _glpkpi.glp_mincost_lp

def glp_mincost_okalg(G, v_rhs, a_low, a_cap, a_cost, sol, a_x, v_pi):
    return _glpkpi.glp_mincost_okalg(G, v_rhs, a_low, a_cap, a_cost, sol, a_x, v_pi)
glp_mincost_okalg = _glpkpi.glp_mincost_okalg

def glp_maxflow_lp(P, G, names, s, t, a_cap):
    return _glpkpi.glp_maxflow_lp(P, G, names, s, t, a_cap)
glp_maxflow_lp = _glpkpi.glp_maxflow_lp

def glp_maxflow_ffalg(G, s, t, a_cap, sol, a_x, v_cut):
    return _glpkpi.glp_maxflow_ffalg(G, s, t, a_cap, sol, a_x, v_cut)
glp_maxflow_ffalg = _glpkpi.glp_maxflow_ffalg

def glp_check_asnprob(G, v_set):
    return _glpkpi.glp_check_asnprob(G, v_set)
glp_check_asnprob = _glpkpi.glp_check_asnprob

_glpkpi.GLP_ASN_MIN_swigconstant(_glpkpi)
GLP_ASN_MIN = _glpkpi.GLP_ASN_MIN

_glpkpi.GLP_ASN_MAX_swigconstant(_glpkpi)
GLP_ASN_MAX = _glpkpi.GLP_ASN_MAX

_glpkpi.GLP_ASN_MMP_swigconstant(_glpkpi)
GLP_ASN_MMP = _glpkpi.GLP_ASN_MMP

def glp_asnprob_lp(P, form, G, names, v_set, a_cost):
    return _glpkpi.glp_asnprob_lp(P, form, G, names, v_set, a_cost)
glp_asnprob_lp = _glpkpi.glp_asnprob_lp

def glp_asnprob_okalg(form, G, v_set, a_cost, sol, a_x):
    return _glpkpi.glp_asnprob_okalg(form, G, v_set, a_cost, sol, a_x)
glp_asnprob_okalg = _glpkpi.glp_asnprob_okalg

def glp_asnprob_hall(G, v_set, a_x):
    return _glpkpi.glp_asnprob_hall(G, v_set, a_x)
glp_asnprob_hall = _glpkpi.glp_asnprob_hall

def glp_read_mincost(G, v_rhs, a_low, a_cap, a_cost, fname):
    return _glpkpi.glp_read_mincost(G, v_rhs, a_low, a_cap, a_cost, fname)
glp_read_mincost = _glpkpi.glp_read_mincost

def glp_write_mincost(G, v_rhs, a_low, a_cap, a_cost, fname):
    return _glpkpi.glp_write_mincost(G, v_rhs, a_low, a_cap, a_cost, fname)
glp_write_mincost = _glpkpi.glp_write_mincost

def glp_read_maxflow(G, s, t, a_cap, fname):
    return _glpkpi.glp_read_maxflow(G, s, t, a_cap, fname)
glp_read_maxflow = _glpkpi.glp_read_maxflow

def glp_write_maxflow(G, s, t, a_cap, fname):
    return _glpkpi.glp_write_maxflow(G, s, t, a_cap, fname)
glp_write_maxflow = _glpkpi.glp_write_maxflow

def glp_read_asnprob(G, v_set, a_cost, fname):
    return _glpkpi.glp_read_asnprob(G, v_set, a_cost, fname)
glp_read_asnprob = _glpkpi.glp_read_asnprob

def glp_write_asnprob(G, v_set, a_cost, fname):
    return _glpkpi.glp_write_asnprob(G, v_set, a_cost, fname)
glp_write_asnprob = _glpkpi.glp_write_asnprob

def glp_read_ccdata(G, v_wgt, fname):
    return _glpkpi.glp_read_ccdata(G, v_wgt, fname)
glp_read_ccdata = _glpkpi.glp_read_ccdata

def glp_write_ccdata(G, v_wgt, fname):
    return _glpkpi.glp_write_ccdata(G, v_wgt, fname)
glp_write_ccdata = _glpkpi.glp_write_ccdata

def glp_netgen(G, v_rhs, a_cap, a_cost, parm):
    return _glpkpi.glp_netgen(G, v_rhs, a_cap, a_cost, parm)
glp_netgen = _glpkpi.glp_netgen

def glp_gridgen(G, v_rhs, a_cap, a_cost, parm):
    return _glpkpi.glp_gridgen(G, v_rhs, a_cap, a_cost, parm)
glp_gridgen = _glpkpi.glp_gridgen

def glp_rmfgen(G, s, t, a_cap, parm):
    return _glpkpi.glp_rmfgen(G, s, t, a_cap, parm)
glp_rmfgen = _glpkpi.glp_rmfgen

def glp_weak_comp(G, v_num):
    return _glpkpi.glp_weak_comp(G, v_num)
glp_weak_comp = _glpkpi.glp_weak_comp

def glp_strong_comp(G, v_num):
    return _glpkpi.glp_strong_comp(G, v_num)
glp_strong_comp = _glpkpi.glp_strong_comp

def glp_top_sort(G, v_num):
    return _glpkpi.glp_top_sort(G, v_num)
glp_top_sort = _glpkpi.glp_top_sort

def glp_wclique_exact(G, v_wgt, sol, v_set):
    return _glpkpi.glp_wclique_exact(G, v_wgt, sol, v_set)
glp_wclique_exact = _glpkpi.glp_wclique_exact

_glpkpi.LPX_LP_swigconstant(_glpkpi)
LPX_LP = _glpkpi.LPX_LP

_glpkpi.LPX_MIP_swigconstant(_glpkpi)
LPX_MIP = _glpkpi.LPX_MIP

_glpkpi.LPX_FR_swigconstant(_glpkpi)
LPX_FR = _glpkpi.LPX_FR

_glpkpi.LPX_LO_swigconstant(_glpkpi)
LPX_LO = _glpkpi.LPX_LO

_glpkpi.LPX_UP_swigconstant(_glpkpi)
LPX_UP = _glpkpi.LPX_UP

_glpkpi.LPX_DB_swigconstant(_glpkpi)
LPX_DB = _glpkpi.LPX_DB

_glpkpi.LPX_FX_swigconstant(_glpkpi)
LPX_FX = _glpkpi.LPX_FX

_glpkpi.LPX_MIN_swigconstant(_glpkpi)
LPX_MIN = _glpkpi.LPX_MIN

_glpkpi.LPX_MAX_swigconstant(_glpkpi)
LPX_MAX = _glpkpi.LPX_MAX

_glpkpi.LPX_P_UNDEF_swigconstant(_glpkpi)
LPX_P_UNDEF = _glpkpi.LPX_P_UNDEF

_glpkpi.LPX_P_FEAS_swigconstant(_glpkpi)
LPX_P_FEAS = _glpkpi.LPX_P_FEAS

_glpkpi.LPX_P_INFEAS_swigconstant(_glpkpi)
LPX_P_INFEAS = _glpkpi.LPX_P_INFEAS

_glpkpi.LPX_P_NOFEAS_swigconstant(_glpkpi)
LPX_P_NOFEAS = _glpkpi.LPX_P_NOFEAS

_glpkpi.LPX_D_UNDEF_swigconstant(_glpkpi)
LPX_D_UNDEF = _glpkpi.LPX_D_UNDEF

_glpkpi.LPX_D_FEAS_swigconstant(_glpkpi)
LPX_D_FEAS = _glpkpi.LPX_D_FEAS

_glpkpi.LPX_D_INFEAS_swigconstant(_glpkpi)
LPX_D_INFEAS = _glpkpi.LPX_D_INFEAS

_glpkpi.LPX_D_NOFEAS_swigconstant(_glpkpi)
LPX_D_NOFEAS = _glpkpi.LPX_D_NOFEAS

_glpkpi.LPX_BS_swigconstant(_glpkpi)
LPX_BS = _glpkpi.LPX_BS

_glpkpi.LPX_NL_swigconstant(_glpkpi)
LPX_NL = _glpkpi.LPX_NL

_glpkpi.LPX_NU_swigconstant(_glpkpi)
LPX_NU = _glpkpi.LPX_NU

_glpkpi.LPX_NF_swigconstant(_glpkpi)
LPX_NF = _glpkpi.LPX_NF

_glpkpi.LPX_NS_swigconstant(_glpkpi)
LPX_NS = _glpkpi.LPX_NS

_glpkpi.LPX_T_UNDEF_swigconstant(_glpkpi)
LPX_T_UNDEF = _glpkpi.LPX_T_UNDEF

_glpkpi.LPX_T_OPT_swigconstant(_glpkpi)
LPX_T_OPT = _glpkpi.LPX_T_OPT

_glpkpi.LPX_CV_swigconstant(_glpkpi)
LPX_CV = _glpkpi.LPX_CV

_glpkpi.LPX_IV_swigconstant(_glpkpi)
LPX_IV = _glpkpi.LPX_IV

_glpkpi.LPX_I_UNDEF_swigconstant(_glpkpi)
LPX_I_UNDEF = _glpkpi.LPX_I_UNDEF

_glpkpi.LPX_I_OPT_swigconstant(_glpkpi)
LPX_I_OPT = _glpkpi.LPX_I_OPT

_glpkpi.LPX_I_FEAS_swigconstant(_glpkpi)
LPX_I_FEAS = _glpkpi.LPX_I_FEAS

_glpkpi.LPX_I_NOFEAS_swigconstant(_glpkpi)
LPX_I_NOFEAS = _glpkpi.LPX_I_NOFEAS

_glpkpi.LPX_OPT_swigconstant(_glpkpi)
LPX_OPT = _glpkpi.LPX_OPT

_glpkpi.LPX_FEAS_swigconstant(_glpkpi)
LPX_FEAS = _glpkpi.LPX_FEAS

_glpkpi.LPX_INFEAS_swigconstant(_glpkpi)
LPX_INFEAS = _glpkpi.LPX_INFEAS

_glpkpi.LPX_NOFEAS_swigconstant(_glpkpi)
LPX_NOFEAS = _glpkpi.LPX_NOFEAS

_glpkpi.LPX_UNBND_swigconstant(_glpkpi)
LPX_UNBND = _glpkpi.LPX_UNBND

_glpkpi.LPX_UNDEF_swigconstant(_glpkpi)
LPX_UNDEF = _glpkpi.LPX_UNDEF

_glpkpi.LPX_E_OK_swigconstant(_glpkpi)
LPX_E_OK = _glpkpi.LPX_E_OK

_glpkpi.LPX_E_EMPTY_swigconstant(_glpkpi)
LPX_E_EMPTY = _glpkpi.LPX_E_EMPTY

_glpkpi.LPX_E_BADB_swigconstant(_glpkpi)
LPX_E_BADB = _glpkpi.LPX_E_BADB

_glpkpi.LPX_E_INFEAS_swigconstant(_glpkpi)
LPX_E_INFEAS = _glpkpi.LPX_E_INFEAS

_glpkpi.LPX_E_FAULT_swigconstant(_glpkpi)
LPX_E_FAULT = _glpkpi.LPX_E_FAULT

_glpkpi.LPX_E_OBJLL_swigconstant(_glpkpi)
LPX_E_OBJLL = _glpkpi.LPX_E_OBJLL

_glpkpi.LPX_E_OBJUL_swigconstant(_glpkpi)
LPX_E_OBJUL = _glpkpi.LPX_E_OBJUL

_glpkpi.LPX_E_ITLIM_swigconstant(_glpkpi)
LPX_E_ITLIM = _glpkpi.LPX_E_ITLIM

_glpkpi.LPX_E_TMLIM_swigconstant(_glpkpi)
LPX_E_TMLIM = _glpkpi.LPX_E_TMLIM

_glpkpi.LPX_E_NOFEAS_swigconstant(_glpkpi)
LPX_E_NOFEAS = _glpkpi.LPX_E_NOFEAS

_glpkpi.LPX_E_INSTAB_swigconstant(_glpkpi)
LPX_E_INSTAB = _glpkpi.LPX_E_INSTAB

_glpkpi.LPX_E_SING_swigconstant(_glpkpi)
LPX_E_SING = _glpkpi.LPX_E_SING

_glpkpi.LPX_E_NOCONV_swigconstant(_glpkpi)
LPX_E_NOCONV = _glpkpi.LPX_E_NOCONV

_glpkpi.LPX_E_NOPFS_swigconstant(_glpkpi)
LPX_E_NOPFS = _glpkpi.LPX_E_NOPFS

_glpkpi.LPX_E_NODFS_swigconstant(_glpkpi)
LPX_E_NODFS = _glpkpi.LPX_E_NODFS

_glpkpi.LPX_E_MIPGAP_swigconstant(_glpkpi)
LPX_E_MIPGAP = _glpkpi.LPX_E_MIPGAP

_glpkpi.LPX_K_MSGLEV_swigconstant(_glpkpi)
LPX_K_MSGLEV = _glpkpi.LPX_K_MSGLEV

_glpkpi.LPX_K_SCALE_swigconstant(_glpkpi)
LPX_K_SCALE = _glpkpi.LPX_K_SCALE

_glpkpi.LPX_K_DUAL_swigconstant(_glpkpi)
LPX_K_DUAL = _glpkpi.LPX_K_DUAL

_glpkpi.LPX_K_PRICE_swigconstant(_glpkpi)
LPX_K_PRICE = _glpkpi.LPX_K_PRICE

_glpkpi.LPX_K_RELAX_swigconstant(_glpkpi)
LPX_K_RELAX = _glpkpi.LPX_K_RELAX

_glpkpi.LPX_K_TOLBND_swigconstant(_glpkpi)
LPX_K_TOLBND = _glpkpi.LPX_K_TOLBND

_glpkpi.LPX_K_TOLDJ_swigconstant(_glpkpi)
LPX_K_TOLDJ = _glpkpi.LPX_K_TOLDJ

_glpkpi.LPX_K_TOLPIV_swigconstant(_glpkpi)
LPX_K_TOLPIV = _glpkpi.LPX_K_TOLPIV

_glpkpi.LPX_K_ROUND_swigconstant(_glpkpi)
LPX_K_ROUND = _glpkpi.LPX_K_ROUND

_glpkpi.LPX_K_OBJLL_swigconstant(_glpkpi)
LPX_K_OBJLL = _glpkpi.LPX_K_OBJLL

_glpkpi.LPX_K_OBJUL_swigconstant(_glpkpi)
LPX_K_OBJUL = _glpkpi.LPX_K_OBJUL

_glpkpi.LPX_K_ITLIM_swigconstant(_glpkpi)
LPX_K_ITLIM = _glpkpi.LPX_K_ITLIM

_glpkpi.LPX_K_ITCNT_swigconstant(_glpkpi)
LPX_K_ITCNT = _glpkpi.LPX_K_ITCNT

_glpkpi.LPX_K_TMLIM_swigconstant(_glpkpi)
LPX_K_TMLIM = _glpkpi.LPX_K_TMLIM

_glpkpi.LPX_K_OUTFRQ_swigconstant(_glpkpi)
LPX_K_OUTFRQ = _glpkpi.LPX_K_OUTFRQ

_glpkpi.LPX_K_OUTDLY_swigconstant(_glpkpi)
LPX_K_OUTDLY = _glpkpi.LPX_K_OUTDLY

_glpkpi.LPX_K_BRANCH_swigconstant(_glpkpi)
LPX_K_BRANCH = _glpkpi.LPX_K_BRANCH

_glpkpi.LPX_K_BTRACK_swigconstant(_glpkpi)
LPX_K_BTRACK = _glpkpi.LPX_K_BTRACK

_glpkpi.LPX_K_TOLINT_swigconstant(_glpkpi)
LPX_K_TOLINT = _glpkpi.LPX_K_TOLINT

_glpkpi.LPX_K_TOLOBJ_swigconstant(_glpkpi)
LPX_K_TOLOBJ = _glpkpi.LPX_K_TOLOBJ

_glpkpi.LPX_K_MPSINFO_swigconstant(_glpkpi)
LPX_K_MPSINFO = _glpkpi.LPX_K_MPSINFO

_glpkpi.LPX_K_MPSOBJ_swigconstant(_glpkpi)
LPX_K_MPSOBJ = _glpkpi.LPX_K_MPSOBJ

_glpkpi.LPX_K_MPSORIG_swigconstant(_glpkpi)
LPX_K_MPSORIG = _glpkpi.LPX_K_MPSORIG

_glpkpi.LPX_K_MPSWIDE_swigconstant(_glpkpi)
LPX_K_MPSWIDE = _glpkpi.LPX_K_MPSWIDE

_glpkpi.LPX_K_MPSFREE_swigconstant(_glpkpi)
LPX_K_MPSFREE = _glpkpi.LPX_K_MPSFREE

_glpkpi.LPX_K_MPSSKIP_swigconstant(_glpkpi)
LPX_K_MPSSKIP = _glpkpi.LPX_K_MPSSKIP

_glpkpi.LPX_K_LPTORIG_swigconstant(_glpkpi)
LPX_K_LPTORIG = _glpkpi.LPX_K_LPTORIG

_glpkpi.LPX_K_PRESOL_swigconstant(_glpkpi)
LPX_K_PRESOL = _glpkpi.LPX_K_PRESOL

_glpkpi.LPX_K_BINARIZE_swigconstant(_glpkpi)
LPX_K_BINARIZE = _glpkpi.LPX_K_BINARIZE

_glpkpi.LPX_K_USECUTS_swigconstant(_glpkpi)
LPX_K_USECUTS = _glpkpi.LPX_K_USECUTS

_glpkpi.LPX_K_BFTYPE_swigconstant(_glpkpi)
LPX_K_BFTYPE = _glpkpi.LPX_K_BFTYPE

_glpkpi.LPX_K_MIPGAP_swigconstant(_glpkpi)
LPX_K_MIPGAP = _glpkpi.LPX_K_MIPGAP

_glpkpi.LPX_C_COVER_swigconstant(_glpkpi)
LPX_C_COVER = _glpkpi.LPX_C_COVER

_glpkpi.LPX_C_CLIQUE_swigconstant(_glpkpi)
LPX_C_CLIQUE = _glpkpi.LPX_C_CLIQUE

_glpkpi.LPX_C_GOMORY_swigconstant(_glpkpi)
LPX_C_GOMORY = _glpkpi.LPX_C_GOMORY

_glpkpi.LPX_C_MIR_swigconstant(_glpkpi)
LPX_C_MIR = _glpkpi.LPX_C_MIR

_glpkpi.LPX_C_ALL_swigconstant(_glpkpi)
LPX_C_ALL = _glpkpi.LPX_C_ALL
class LPXKKT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, LPXKKT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, LPXKKT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["pe_ae_max"] = _glpkpi.LPXKKT_pe_ae_max_set
    __swig_getmethods__["pe_ae_max"] = _glpkpi.LPXKKT_pe_ae_max_get
    if _newclass:
        pe_ae_max = _swig_property(_glpkpi.LPXKKT_pe_ae_max_get, _glpkpi.LPXKKT_pe_ae_max_set)
    __swig_setmethods__["pe_ae_row"] = _glpkpi.LPXKKT_pe_ae_row_set
    __swig_getmethods__["pe_ae_row"] = _glpkpi.LPXKKT_pe_ae_row_get
    if _newclass:
        pe_ae_row = _swig_property(_glpkpi.LPXKKT_pe_ae_row_get, _glpkpi.LPXKKT_pe_ae_row_set)
    __swig_setmethods__["pe_re_max"] = _glpkpi.LPXKKT_pe_re_max_set
    __swig_getmethods__["pe_re_max"] = _glpkpi.LPXKKT_pe_re_max_get
    if _newclass:
        pe_re_max = _swig_property(_glpkpi.LPXKKT_pe_re_max_get, _glpkpi.LPXKKT_pe_re_max_set)
    __swig_setmethods__["pe_re_row"] = _glpkpi.LPXKKT_pe_re_row_set
    __swig_getmethods__["pe_re_row"] = _glpkpi.LPXKKT_pe_re_row_get
    if _newclass:
        pe_re_row = _swig_property(_glpkpi.LPXKKT_pe_re_row_get, _glpkpi.LPXKKT_pe_re_row_set)
    __swig_setmethods__["pe_quality"] = _glpkpi.LPXKKT_pe_quality_set
    __swig_getmethods__["pe_quality"] = _glpkpi.LPXKKT_pe_quality_get
    if _newclass:
        pe_quality = _swig_property(_glpkpi.LPXKKT_pe_quality_get, _glpkpi.LPXKKT_pe_quality_set)
    __swig_setmethods__["pb_ae_max"] = _glpkpi.LPXKKT_pb_ae_max_set
    __swig_getmethods__["pb_ae_max"] = _glpkpi.LPXKKT_pb_ae_max_get
    if _newclass:
        pb_ae_max = _swig_property(_glpkpi.LPXKKT_pb_ae_max_get, _glpkpi.LPXKKT_pb_ae_max_set)
    __swig_setmethods__["pb_ae_ind"] = _glpkpi.LPXKKT_pb_ae_ind_set
    __swig_getmethods__["pb_ae_ind"] = _glpkpi.LPXKKT_pb_ae_ind_get
    if _newclass:
        pb_ae_ind = _swig_property(_glpkpi.LPXKKT_pb_ae_ind_get, _glpkpi.LPXKKT_pb_ae_ind_set)
    __swig_setmethods__["pb_re_max"] = _glpkpi.LPXKKT_pb_re_max_set
    __swig_getmethods__["pb_re_max"] = _glpkpi.LPXKKT_pb_re_max_get
    if _newclass:
        pb_re_max = _swig_property(_glpkpi.LPXKKT_pb_re_max_get, _glpkpi.LPXKKT_pb_re_max_set)
    __swig_setmethods__["pb_re_ind"] = _glpkpi.LPXKKT_pb_re_ind_set
    __swig_getmethods__["pb_re_ind"] = _glpkpi.LPXKKT_pb_re_ind_get
    if _newclass:
        pb_re_ind = _swig_property(_glpkpi.LPXKKT_pb_re_ind_get, _glpkpi.LPXKKT_pb_re_ind_set)
    __swig_setmethods__["pb_quality"] = _glpkpi.LPXKKT_pb_quality_set
    __swig_getmethods__["pb_quality"] = _glpkpi.LPXKKT_pb_quality_get
    if _newclass:
        pb_quality = _swig_property(_glpkpi.LPXKKT_pb_quality_get, _glpkpi.LPXKKT_pb_quality_set)
    __swig_setmethods__["de_ae_max"] = _glpkpi.LPXKKT_de_ae_max_set
    __swig_getmethods__["de_ae_max"] = _glpkpi.LPXKKT_de_ae_max_get
    if _newclass:
        de_ae_max = _swig_property(_glpkpi.LPXKKT_de_ae_max_get, _glpkpi.LPXKKT_de_ae_max_set)
    __swig_setmethods__["de_ae_col"] = _glpkpi.LPXKKT_de_ae_col_set
    __swig_getmethods__["de_ae_col"] = _glpkpi.LPXKKT_de_ae_col_get
    if _newclass:
        de_ae_col = _swig_property(_glpkpi.LPXKKT_de_ae_col_get, _glpkpi.LPXKKT_de_ae_col_set)
    __swig_setmethods__["de_re_max"] = _glpkpi.LPXKKT_de_re_max_set
    __swig_getmethods__["de_re_max"] = _glpkpi.LPXKKT_de_re_max_get
    if _newclass:
        de_re_max = _swig_property(_glpkpi.LPXKKT_de_re_max_get, _glpkpi.LPXKKT_de_re_max_set)
    __swig_setmethods__["de_re_col"] = _glpkpi.LPXKKT_de_re_col_set
    __swig_getmethods__["de_re_col"] = _glpkpi.LPXKKT_de_re_col_get
    if _newclass:
        de_re_col = _swig_property(_glpkpi.LPXKKT_de_re_col_get, _glpkpi.LPXKKT_de_re_col_set)
    __swig_setmethods__["de_quality"] = _glpkpi.LPXKKT_de_quality_set
    __swig_getmethods__["de_quality"] = _glpkpi.LPXKKT_de_quality_get
    if _newclass:
        de_quality = _swig_property(_glpkpi.LPXKKT_de_quality_get, _glpkpi.LPXKKT_de_quality_set)
    __swig_setmethods__["db_ae_max"] = _glpkpi.LPXKKT_db_ae_max_set
    __swig_getmethods__["db_ae_max"] = _glpkpi.LPXKKT_db_ae_max_get
    if _newclass:
        db_ae_max = _swig_property(_glpkpi.LPXKKT_db_ae_max_get, _glpkpi.LPXKKT_db_ae_max_set)
    __swig_setmethods__["db_ae_ind"] = _glpkpi.LPXKKT_db_ae_ind_set
    __swig_getmethods__["db_ae_ind"] = _glpkpi.LPXKKT_db_ae_ind_get
    if _newclass:
        db_ae_ind = _swig_property(_glpkpi.LPXKKT_db_ae_ind_get, _glpkpi.LPXKKT_db_ae_ind_set)
    __swig_setmethods__["db_re_max"] = _glpkpi.LPXKKT_db_re_max_set
    __swig_getmethods__["db_re_max"] = _glpkpi.LPXKKT_db_re_max_get
    if _newclass:
        db_re_max = _swig_property(_glpkpi.LPXKKT_db_re_max_get, _glpkpi.LPXKKT_db_re_max_set)
    __swig_setmethods__["db_re_ind"] = _glpkpi.LPXKKT_db_re_ind_set
    __swig_getmethods__["db_re_ind"] = _glpkpi.LPXKKT_db_re_ind_get
    if _newclass:
        db_re_ind = _swig_property(_glpkpi.LPXKKT_db_re_ind_get, _glpkpi.LPXKKT_db_re_ind_set)
    __swig_setmethods__["db_quality"] = _glpkpi.LPXKKT_db_quality_set
    __swig_getmethods__["db_quality"] = _glpkpi.LPXKKT_db_quality_get
    if _newclass:
        db_quality = _swig_property(_glpkpi.LPXKKT_db_quality_get, _glpkpi.LPXKKT_db_quality_set)
    __swig_setmethods__["cs_ae_max"] = _glpkpi.LPXKKT_cs_ae_max_set
    __swig_getmethods__["cs_ae_max"] = _glpkpi.LPXKKT_cs_ae_max_get
    if _newclass:
        cs_ae_max = _swig_property(_glpkpi.LPXKKT_cs_ae_max_get, _glpkpi.LPXKKT_cs_ae_max_set)
    __swig_setmethods__["cs_ae_ind"] = _glpkpi.LPXKKT_cs_ae_ind_set
    __swig_getmethods__["cs_ae_ind"] = _glpkpi.LPXKKT_cs_ae_ind_get
    if _newclass:
        cs_ae_ind = _swig_property(_glpkpi.LPXKKT_cs_ae_ind_get, _glpkpi.LPXKKT_cs_ae_ind_set)
    __swig_setmethods__["cs_re_max"] = _glpkpi.LPXKKT_cs_re_max_set
    __swig_getmethods__["cs_re_max"] = _glpkpi.LPXKKT_cs_re_max_get
    if _newclass:
        cs_re_max = _swig_property(_glpkpi.LPXKKT_cs_re_max_get, _glpkpi.LPXKKT_cs_re_max_set)
    __swig_setmethods__["cs_re_ind"] = _glpkpi.LPXKKT_cs_re_ind_set
    __swig_getmethods__["cs_re_ind"] = _glpkpi.LPXKKT_cs_re_ind_get
    if _newclass:
        cs_re_ind = _swig_property(_glpkpi.LPXKKT_cs_re_ind_get, _glpkpi.LPXKKT_cs_re_ind_set)
    __swig_setmethods__["cs_quality"] = _glpkpi.LPXKKT_cs_quality_set
    __swig_getmethods__["cs_quality"] = _glpkpi.LPXKKT_cs_quality_get
    if _newclass:
        cs_quality = _swig_property(_glpkpi.LPXKKT_cs_quality_get, _glpkpi.LPXKKT_cs_quality_set)

    def __init__(self):
        this = _glpkpi.new_LPXKKT()
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _glpkpi.delete_LPXKKT
    __del__ = lambda self: None
LPXKKT_swigregister = _glpkpi.LPXKKT_swigregister
LPXKKT_swigregister(LPXKKT)


def _glp_lpx_create_prob():
    return _glpkpi._glp_lpx_create_prob()
_glp_lpx_create_prob = _glpkpi._glp_lpx_create_prob

def _glp_lpx_set_prob_name(lp, name):
    return _glpkpi._glp_lpx_set_prob_name(lp, name)
_glp_lpx_set_prob_name = _glpkpi._glp_lpx_set_prob_name

def _glp_lpx_set_obj_name(lp, name):
    return _glpkpi._glp_lpx_set_obj_name(lp, name)
_glp_lpx_set_obj_name = _glpkpi._glp_lpx_set_obj_name

def _glp_lpx_set_obj_dir(lp, dir):
    return _glpkpi._glp_lpx_set_obj_dir(lp, dir)
_glp_lpx_set_obj_dir = _glpkpi._glp_lpx_set_obj_dir

def _glp_lpx_add_rows(lp, nrs):
    return _glpkpi._glp_lpx_add_rows(lp, nrs)
_glp_lpx_add_rows = _glpkpi._glp_lpx_add_rows

def _glp_lpx_add_cols(lp, ncs):
    return _glpkpi._glp_lpx_add_cols(lp, ncs)
_glp_lpx_add_cols = _glpkpi._glp_lpx_add_cols

def _glp_lpx_set_row_name(lp, i, name):
    return _glpkpi._glp_lpx_set_row_name(lp, i, name)
_glp_lpx_set_row_name = _glpkpi._glp_lpx_set_row_name

def _glp_lpx_set_col_name(lp, j, name):
    return _glpkpi._glp_lpx_set_col_name(lp, j, name)
_glp_lpx_set_col_name = _glpkpi._glp_lpx_set_col_name

def _glp_lpx_set_row_bnds(lp, i, type, lb, ub):
    return _glpkpi._glp_lpx_set_row_bnds(lp, i, type, lb, ub)
_glp_lpx_set_row_bnds = _glpkpi._glp_lpx_set_row_bnds

def _glp_lpx_set_col_bnds(lp, j, type, lb, ub):
    return _glpkpi._glp_lpx_set_col_bnds(lp, j, type, lb, ub)
_glp_lpx_set_col_bnds = _glpkpi._glp_lpx_set_col_bnds

def _glp_lpx_set_obj_coef(lp, j, coef):
    return _glpkpi._glp_lpx_set_obj_coef(lp, j, coef)
_glp_lpx_set_obj_coef = _glpkpi._glp_lpx_set_obj_coef

def _glp_lpx_set_mat_row(lp, i, len, ind, val):
    return _glpkpi._glp_lpx_set_mat_row(lp, i, len, ind, val)
_glp_lpx_set_mat_row = _glpkpi._glp_lpx_set_mat_row

def _glp_lpx_set_mat_col(lp, j, len, ind, val):
    return _glpkpi._glp_lpx_set_mat_col(lp, j, len, ind, val)
_glp_lpx_set_mat_col = _glpkpi._glp_lpx_set_mat_col

def _glp_lpx_load_matrix(lp, ne, ia, ja, ar):
    return _glpkpi._glp_lpx_load_matrix(lp, ne, ia, ja, ar)
_glp_lpx_load_matrix = _glpkpi._glp_lpx_load_matrix

def _glp_lpx_del_rows(lp, nrs, num):
    return _glpkpi._glp_lpx_del_rows(lp, nrs, num)
_glp_lpx_del_rows = _glpkpi._glp_lpx_del_rows

def _glp_lpx_del_cols(lp, ncs, num):
    return _glpkpi._glp_lpx_del_cols(lp, ncs, num)
_glp_lpx_del_cols = _glpkpi._glp_lpx_del_cols

def _glp_lpx_delete_prob(lp):
    return _glpkpi._glp_lpx_delete_prob(lp)
_glp_lpx_delete_prob = _glpkpi._glp_lpx_delete_prob

def _glp_lpx_get_prob_name(lp):
    return _glpkpi._glp_lpx_get_prob_name(lp)
_glp_lpx_get_prob_name = _glpkpi._glp_lpx_get_prob_name

def _glp_lpx_get_obj_name(lp):
    return _glpkpi._glp_lpx_get_obj_name(lp)
_glp_lpx_get_obj_name = _glpkpi._glp_lpx_get_obj_name

def _glp_lpx_get_obj_dir(lp):
    return _glpkpi._glp_lpx_get_obj_dir(lp)
_glp_lpx_get_obj_dir = _glpkpi._glp_lpx_get_obj_dir

def _glp_lpx_get_num_rows(lp):
    return _glpkpi._glp_lpx_get_num_rows(lp)
_glp_lpx_get_num_rows = _glpkpi._glp_lpx_get_num_rows

def _glp_lpx_get_num_cols(lp):
    return _glpkpi._glp_lpx_get_num_cols(lp)
_glp_lpx_get_num_cols = _glpkpi._glp_lpx_get_num_cols

def _glp_lpx_get_row_name(lp, i):
    return _glpkpi._glp_lpx_get_row_name(lp, i)
_glp_lpx_get_row_name = _glpkpi._glp_lpx_get_row_name

def _glp_lpx_get_col_name(lp, j):
    return _glpkpi._glp_lpx_get_col_name(lp, j)
_glp_lpx_get_col_name = _glpkpi._glp_lpx_get_col_name

def _glp_lpx_get_row_type(lp, i):
    return _glpkpi._glp_lpx_get_row_type(lp, i)
_glp_lpx_get_row_type = _glpkpi._glp_lpx_get_row_type

def _glp_lpx_get_row_lb(lp, i):
    return _glpkpi._glp_lpx_get_row_lb(lp, i)
_glp_lpx_get_row_lb = _glpkpi._glp_lpx_get_row_lb

def _glp_lpx_get_row_ub(lp, i):
    return _glpkpi._glp_lpx_get_row_ub(lp, i)
_glp_lpx_get_row_ub = _glpkpi._glp_lpx_get_row_ub

def _glp_lpx_get_row_bnds(lp, i, typx, lb, ub):
    return _glpkpi._glp_lpx_get_row_bnds(lp, i, typx, lb, ub)
_glp_lpx_get_row_bnds = _glpkpi._glp_lpx_get_row_bnds

def _glp_lpx_get_col_type(lp, j):
    return _glpkpi._glp_lpx_get_col_type(lp, j)
_glp_lpx_get_col_type = _glpkpi._glp_lpx_get_col_type

def _glp_lpx_get_col_lb(lp, j):
    return _glpkpi._glp_lpx_get_col_lb(lp, j)
_glp_lpx_get_col_lb = _glpkpi._glp_lpx_get_col_lb

def _glp_lpx_get_col_ub(lp, j):
    return _glpkpi._glp_lpx_get_col_ub(lp, j)
_glp_lpx_get_col_ub = _glpkpi._glp_lpx_get_col_ub

def _glp_lpx_get_col_bnds(lp, j, typx, lb, ub):
    return _glpkpi._glp_lpx_get_col_bnds(lp, j, typx, lb, ub)
_glp_lpx_get_col_bnds = _glpkpi._glp_lpx_get_col_bnds

def _glp_lpx_get_obj_coef(lp, j):
    return _glpkpi._glp_lpx_get_obj_coef(lp, j)
_glp_lpx_get_obj_coef = _glpkpi._glp_lpx_get_obj_coef

def _glp_lpx_get_num_nz(lp):
    return _glpkpi._glp_lpx_get_num_nz(lp)
_glp_lpx_get_num_nz = _glpkpi._glp_lpx_get_num_nz

def _glp_lpx_get_mat_row(lp, i, ind, val):
    return _glpkpi._glp_lpx_get_mat_row(lp, i, ind, val)
_glp_lpx_get_mat_row = _glpkpi._glp_lpx_get_mat_row

def _glp_lpx_get_mat_col(lp, j, ind, val):
    return _glpkpi._glp_lpx_get_mat_col(lp, j, ind, val)
_glp_lpx_get_mat_col = _glpkpi._glp_lpx_get_mat_col

def _glp_lpx_create_index(lp):
    return _glpkpi._glp_lpx_create_index(lp)
_glp_lpx_create_index = _glpkpi._glp_lpx_create_index

def _glp_lpx_find_row(lp, name):
    return _glpkpi._glp_lpx_find_row(lp, name)
_glp_lpx_find_row = _glpkpi._glp_lpx_find_row

def _glp_lpx_find_col(lp, name):
    return _glpkpi._glp_lpx_find_col(lp, name)
_glp_lpx_find_col = _glpkpi._glp_lpx_find_col

def _glp_lpx_delete_index(lp):
    return _glpkpi._glp_lpx_delete_index(lp)
_glp_lpx_delete_index = _glpkpi._glp_lpx_delete_index

def _glp_lpx_scale_prob(lp):
    return _glpkpi._glp_lpx_scale_prob(lp)
_glp_lpx_scale_prob = _glpkpi._glp_lpx_scale_prob

def _glp_lpx_unscale_prob(lp):
    return _glpkpi._glp_lpx_unscale_prob(lp)
_glp_lpx_unscale_prob = _glpkpi._glp_lpx_unscale_prob

def _glp_lpx_set_row_stat(lp, i, stat):
    return _glpkpi._glp_lpx_set_row_stat(lp, i, stat)
_glp_lpx_set_row_stat = _glpkpi._glp_lpx_set_row_stat

def _glp_lpx_set_col_stat(lp, j, stat):
    return _glpkpi._glp_lpx_set_col_stat(lp, j, stat)
_glp_lpx_set_col_stat = _glpkpi._glp_lpx_set_col_stat

def _glp_lpx_std_basis(lp):
    return _glpkpi._glp_lpx_std_basis(lp)
_glp_lpx_std_basis = _glpkpi._glp_lpx_std_basis

def _glp_lpx_adv_basis(lp):
    return _glpkpi._glp_lpx_adv_basis(lp)
_glp_lpx_adv_basis = _glpkpi._glp_lpx_adv_basis

def _glp_lpx_cpx_basis(lp):
    return _glpkpi._glp_lpx_cpx_basis(lp)
_glp_lpx_cpx_basis = _glpkpi._glp_lpx_cpx_basis

def _glp_lpx_simplex(lp):
    return _glpkpi._glp_lpx_simplex(lp)
_glp_lpx_simplex = _glpkpi._glp_lpx_simplex

def _glp_lpx_exact(lp):
    return _glpkpi._glp_lpx_exact(lp)
_glp_lpx_exact = _glpkpi._glp_lpx_exact

def _glp_lpx_get_status(lp):
    return _glpkpi._glp_lpx_get_status(lp)
_glp_lpx_get_status = _glpkpi._glp_lpx_get_status

def _glp_lpx_get_prim_stat(lp):
    return _glpkpi._glp_lpx_get_prim_stat(lp)
_glp_lpx_get_prim_stat = _glpkpi._glp_lpx_get_prim_stat

def _glp_lpx_get_dual_stat(lp):
    return _glpkpi._glp_lpx_get_dual_stat(lp)
_glp_lpx_get_dual_stat = _glpkpi._glp_lpx_get_dual_stat

def _glp_lpx_get_obj_val(lp):
    return _glpkpi._glp_lpx_get_obj_val(lp)
_glp_lpx_get_obj_val = _glpkpi._glp_lpx_get_obj_val

def _glp_lpx_get_row_stat(lp, i):
    return _glpkpi._glp_lpx_get_row_stat(lp, i)
_glp_lpx_get_row_stat = _glpkpi._glp_lpx_get_row_stat

def _glp_lpx_get_row_prim(lp, i):
    return _glpkpi._glp_lpx_get_row_prim(lp, i)
_glp_lpx_get_row_prim = _glpkpi._glp_lpx_get_row_prim

def _glp_lpx_get_row_dual(lp, i):
    return _glpkpi._glp_lpx_get_row_dual(lp, i)
_glp_lpx_get_row_dual = _glpkpi._glp_lpx_get_row_dual

def _glp_lpx_get_row_info(lp, i, tagx, vx, dx):
    return _glpkpi._glp_lpx_get_row_info(lp, i, tagx, vx, dx)
_glp_lpx_get_row_info = _glpkpi._glp_lpx_get_row_info

def _glp_lpx_get_col_stat(lp, j):
    return _glpkpi._glp_lpx_get_col_stat(lp, j)
_glp_lpx_get_col_stat = _glpkpi._glp_lpx_get_col_stat

def _glp_lpx_get_col_prim(lp, j):
    return _glpkpi._glp_lpx_get_col_prim(lp, j)
_glp_lpx_get_col_prim = _glpkpi._glp_lpx_get_col_prim

def _glp_lpx_get_col_dual(lp, j):
    return _glpkpi._glp_lpx_get_col_dual(lp, j)
_glp_lpx_get_col_dual = _glpkpi._glp_lpx_get_col_dual

def _glp_lpx_get_col_info(lp, j, tagx, vx, dx):
    return _glpkpi._glp_lpx_get_col_info(lp, j, tagx, vx, dx)
_glp_lpx_get_col_info = _glpkpi._glp_lpx_get_col_info

def _glp_lpx_get_ray_info(lp):
    return _glpkpi._glp_lpx_get_ray_info(lp)
_glp_lpx_get_ray_info = _glpkpi._glp_lpx_get_ray_info

def _glp_lpx_check_kkt(lp, scaled, kkt):
    return _glpkpi._glp_lpx_check_kkt(lp, scaled, kkt)
_glp_lpx_check_kkt = _glpkpi._glp_lpx_check_kkt

def _glp_lpx_warm_up(lp):
    return _glpkpi._glp_lpx_warm_up(lp)
_glp_lpx_warm_up = _glpkpi._glp_lpx_warm_up

def _glp_lpx_eval_tab_row(lp, k, ind, val):
    return _glpkpi._glp_lpx_eval_tab_row(lp, k, ind, val)
_glp_lpx_eval_tab_row = _glpkpi._glp_lpx_eval_tab_row

def _glp_lpx_eval_tab_col(lp, k, ind, val):
    return _glpkpi._glp_lpx_eval_tab_col(lp, k, ind, val)
_glp_lpx_eval_tab_col = _glpkpi._glp_lpx_eval_tab_col

def _glp_lpx_transform_row(lp, len, ind, val):
    return _glpkpi._glp_lpx_transform_row(lp, len, ind, val)
_glp_lpx_transform_row = _glpkpi._glp_lpx_transform_row

def _glp_lpx_transform_col(lp, len, ind, val):
    return _glpkpi._glp_lpx_transform_col(lp, len, ind, val)
_glp_lpx_transform_col = _glpkpi._glp_lpx_transform_col

def _glp_lpx_prim_ratio_test(lp, len, ind, val, how, tol):
    return _glpkpi._glp_lpx_prim_ratio_test(lp, len, ind, val, how, tol)
_glp_lpx_prim_ratio_test = _glpkpi._glp_lpx_prim_ratio_test

def _glp_lpx_dual_ratio_test(lp, len, ind, val, how, tol):
    return _glpkpi._glp_lpx_dual_ratio_test(lp, len, ind, val, how, tol)
_glp_lpx_dual_ratio_test = _glpkpi._glp_lpx_dual_ratio_test

def _glp_lpx_interior(lp):
    return _glpkpi._glp_lpx_interior(lp)
_glp_lpx_interior = _glpkpi._glp_lpx_interior

def _glp_lpx_ipt_status(lp):
    return _glpkpi._glp_lpx_ipt_status(lp)
_glp_lpx_ipt_status = _glpkpi._glp_lpx_ipt_status

def _glp_lpx_ipt_obj_val(lp):
    return _glpkpi._glp_lpx_ipt_obj_val(lp)
_glp_lpx_ipt_obj_val = _glpkpi._glp_lpx_ipt_obj_val

def _glp_lpx_ipt_row_prim(lp, i):
    return _glpkpi._glp_lpx_ipt_row_prim(lp, i)
_glp_lpx_ipt_row_prim = _glpkpi._glp_lpx_ipt_row_prim

def _glp_lpx_ipt_row_dual(lp, i):
    return _glpkpi._glp_lpx_ipt_row_dual(lp, i)
_glp_lpx_ipt_row_dual = _glpkpi._glp_lpx_ipt_row_dual

def _glp_lpx_ipt_col_prim(lp, j):
    return _glpkpi._glp_lpx_ipt_col_prim(lp, j)
_glp_lpx_ipt_col_prim = _glpkpi._glp_lpx_ipt_col_prim

def _glp_lpx_ipt_col_dual(lp, j):
    return _glpkpi._glp_lpx_ipt_col_dual(lp, j)
_glp_lpx_ipt_col_dual = _glpkpi._glp_lpx_ipt_col_dual

def _glp_lpx_set_class(lp, klass):
    return _glpkpi._glp_lpx_set_class(lp, klass)
_glp_lpx_set_class = _glpkpi._glp_lpx_set_class

def _glp_lpx_get_class(lp):
    return _glpkpi._glp_lpx_get_class(lp)
_glp_lpx_get_class = _glpkpi._glp_lpx_get_class

def _glp_lpx_set_col_kind(lp, j, kind):
    return _glpkpi._glp_lpx_set_col_kind(lp, j, kind)
_glp_lpx_set_col_kind = _glpkpi._glp_lpx_set_col_kind

def _glp_lpx_get_col_kind(lp, j):
    return _glpkpi._glp_lpx_get_col_kind(lp, j)
_glp_lpx_get_col_kind = _glpkpi._glp_lpx_get_col_kind

def _glp_lpx_get_num_int(lp):
    return _glpkpi._glp_lpx_get_num_int(lp)
_glp_lpx_get_num_int = _glpkpi._glp_lpx_get_num_int

def _glp_lpx_get_num_bin(lp):
    return _glpkpi._glp_lpx_get_num_bin(lp)
_glp_lpx_get_num_bin = _glpkpi._glp_lpx_get_num_bin

def _glp_lpx_integer(lp):
    return _glpkpi._glp_lpx_integer(lp)
_glp_lpx_integer = _glpkpi._glp_lpx_integer

def _glp_lpx_intopt(lp):
    return _glpkpi._glp_lpx_intopt(lp)
_glp_lpx_intopt = _glpkpi._glp_lpx_intopt

def _glp_lpx_mip_status(lp):
    return _glpkpi._glp_lpx_mip_status(lp)
_glp_lpx_mip_status = _glpkpi._glp_lpx_mip_status

def _glp_lpx_mip_obj_val(lp):
    return _glpkpi._glp_lpx_mip_obj_val(lp)
_glp_lpx_mip_obj_val = _glpkpi._glp_lpx_mip_obj_val

def _glp_lpx_mip_row_val(lp, i):
    return _glpkpi._glp_lpx_mip_row_val(lp, i)
_glp_lpx_mip_row_val = _glpkpi._glp_lpx_mip_row_val

def _glp_lpx_mip_col_val(lp, j):
    return _glpkpi._glp_lpx_mip_col_val(lp, j)
_glp_lpx_mip_col_val = _glpkpi._glp_lpx_mip_col_val

def _glp_lpx_check_int(lp, kkt):
    return _glpkpi._glp_lpx_check_int(lp, kkt)
_glp_lpx_check_int = _glpkpi._glp_lpx_check_int

def _glp_lpx_reset_parms(lp):
    return _glpkpi._glp_lpx_reset_parms(lp)
_glp_lpx_reset_parms = _glpkpi._glp_lpx_reset_parms

def _glp_lpx_set_int_parm(lp, parm, val):
    return _glpkpi._glp_lpx_set_int_parm(lp, parm, val)
_glp_lpx_set_int_parm = _glpkpi._glp_lpx_set_int_parm

def _glp_lpx_get_int_parm(lp, parm):
    return _glpkpi._glp_lpx_get_int_parm(lp, parm)
_glp_lpx_get_int_parm = _glpkpi._glp_lpx_get_int_parm

def _glp_lpx_set_real_parm(lp, parm, val):
    return _glpkpi._glp_lpx_set_real_parm(lp, parm, val)
_glp_lpx_set_real_parm = _glpkpi._glp_lpx_set_real_parm

def _glp_lpx_get_real_parm(lp, parm):
    return _glpkpi._glp_lpx_get_real_parm(lp, parm)
_glp_lpx_get_real_parm = _glpkpi._glp_lpx_get_real_parm

def _glp_lpx_read_mps(fname):
    return _glpkpi._glp_lpx_read_mps(fname)
_glp_lpx_read_mps = _glpkpi._glp_lpx_read_mps

def _glp_lpx_write_mps(lp, fname):
    return _glpkpi._glp_lpx_write_mps(lp, fname)
_glp_lpx_write_mps = _glpkpi._glp_lpx_write_mps

def _glp_lpx_read_bas(lp, fname):
    return _glpkpi._glp_lpx_read_bas(lp, fname)
_glp_lpx_read_bas = _glpkpi._glp_lpx_read_bas

def _glp_lpx_write_bas(lp, fname):
    return _glpkpi._glp_lpx_write_bas(lp, fname)
_glp_lpx_write_bas = _glpkpi._glp_lpx_write_bas

def _glp_lpx_read_freemps(fname):
    return _glpkpi._glp_lpx_read_freemps(fname)
_glp_lpx_read_freemps = _glpkpi._glp_lpx_read_freemps

def _glp_lpx_write_freemps(lp, fname):
    return _glpkpi._glp_lpx_write_freemps(lp, fname)
_glp_lpx_write_freemps = _glpkpi._glp_lpx_write_freemps

def _glp_lpx_read_cpxlp(fname):
    return _glpkpi._glp_lpx_read_cpxlp(fname)
_glp_lpx_read_cpxlp = _glpkpi._glp_lpx_read_cpxlp

def _glp_lpx_write_cpxlp(lp, fname):
    return _glpkpi._glp_lpx_write_cpxlp(lp, fname)
_glp_lpx_write_cpxlp = _glpkpi._glp_lpx_write_cpxlp

def _glp_lpx_read_model(model, data, output):
    return _glpkpi._glp_lpx_read_model(model, data, output)
_glp_lpx_read_model = _glpkpi._glp_lpx_read_model

def _glp_lpx_print_prob(lp, fname):
    return _glpkpi._glp_lpx_print_prob(lp, fname)
_glp_lpx_print_prob = _glpkpi._glp_lpx_print_prob

def _glp_lpx_print_sol(lp, fname):
    return _glpkpi._glp_lpx_print_sol(lp, fname)
_glp_lpx_print_sol = _glpkpi._glp_lpx_print_sol

def _glp_lpx_print_sens_bnds(lp, fname):
    return _glpkpi._glp_lpx_print_sens_bnds(lp, fname)
_glp_lpx_print_sens_bnds = _glpkpi._glp_lpx_print_sens_bnds

def _glp_lpx_print_ips(lp, fname):
    return _glpkpi._glp_lpx_print_ips(lp, fname)
_glp_lpx_print_ips = _glpkpi._glp_lpx_print_ips

def _glp_lpx_print_mip(lp, fname):
    return _glpkpi._glp_lpx_print_mip(lp, fname)
_glp_lpx_print_mip = _glpkpi._glp_lpx_print_mip

def _glp_lpx_is_b_avail(lp):
    return _glpkpi._glp_lpx_is_b_avail(lp)
_glp_lpx_is_b_avail = _glpkpi._glp_lpx_is_b_avail

def _glp_lpx_write_pb(lp, fname, normalized, binarize):
    return _glpkpi._glp_lpx_write_pb(lp, fname, normalized, binarize)
_glp_lpx_write_pb = _glpkpi._glp_lpx_write_pb

def _glp_lpx_main(argc, argv):
    return _glpkpi._glp_lpx_main(argc, argv)
_glp_lpx_main = _glpkpi._glp_lpx_main
# This file is compatible with both classic and new-style classes.


